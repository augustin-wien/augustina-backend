on:
  push:
    branches:
      - master
      - main
  pull_request:
name: tester
jobs:
  Gotest:
    runs-on: ubuntu-latest

    env:
      # Note: this sets the main database also as the test database
      DB_USER: postgres
      DB_PASS: postgres
      DB_HOST: localhost
      DB_HOST_TEST: localhost # default host value for the database
      DB_NAME: djtesting
      DB_PORT: 5432
      DB_PORT_TEST: 5432

    services:
      # start a postgres service container
      postgres_main:
        image: postgres:16
        env:
          POSTGRES_USER: ${{ env.DB_USER }}
          POSTGRES_PASSWORD: ${{ env.DB_PASS }}
          POSTGRES_DB: ${{ env.DB_NAME }}
        ports:
          - 5432:5432
        # wait until postgres is ready
        options:
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: set env
        run: cp .env.example .env # && touch
        # /home/runner/work/augustin-backend/augustin-backend/docker/.env.parser

      - name: Build keycloak image
        run: docker compose up -d keycloak

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.20"
          cache-dependency-path: app/go.sum

      - name: Build
        run: go install github.com/jackc/tern/v2@latest && cd app && go build -o
          ../build/
      - name: Wait for keycloak to start
        run: |
          while ! curl --connect-timeout 5 -v --max-time 10 --retry 5 --retry-connrefused  --retry-delay 0 --retry-max-time 40 http://localhost:8080
          do
              { echo "Exit status of curl: $?"
                echo "Retrying ..."
              } 1>&2
              sleep 10
          done
      - name: Test
        run: cp .env.example ./app/.env && ls -lah && cd app && cd migrations &&
          tern migrate --config ./tern_test.conf && cd .. && go test ./... -p 1 -v -cover
          -v

      - name: Collect docker logs on failure
        if: failure()
        uses: jwalton/gh-docker-logs@v1
        with:
          dest: "./logs"
      - name: Tar logs
        if: failure()
        run: tar cvzf ./logs.tgz ./logs
      - name: Upload logs to GitHub
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: logs.tgz
          path: ./logs.tgz
