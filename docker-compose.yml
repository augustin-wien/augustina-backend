version: "3.8"

services:
  augustin-frontend:
    build:
      context: ./docker/augustin-frontend
    ports:
      - "8060:80"
    environment:
      VITE_API_URL: ${BACKEND_HOST}
      VITE_KEYCLOAK_URL: ${KEYCLOAK_HOST}
      VITE_AUGUSTIN_COVER: ${AUGUSTIN_COVER}
      VITE_AGB_URL: ${AGB_URL}
    depends_on:
      - augustin
  augustin:
    container_name: augustin
    env_file:
      - .env
    build:
      context: .
    volumes:
      - ./app:/app
    command: >
      sh -c "tern migrate --migrations ./migrations --config
      ./migrations/tern.conf && tern migrate --migrations ./migrations --config
      ./migrations/tern_test.conf  && go run main.go"
    environment:
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_NAME: ${DB_NAME}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_HOST_TEST: ${DB_HOST_TEST}
      DB_PORT_TEST: ${DB_PORT_TEST}
      DEVELOPMENT: true
      FRONTEND_URL: ${FRONTEND_URL}
      VIVA_WALLET_SOURCE_CODE: ${VIVA_WALLET_SOURCE_CODE}
      VIVA_WALLET_SMART_CHECKOUT_CLIENT_ID: ${VIVA_WALLET_SMART_CHECKOUT_CLIENT_ID}
      VIVA_WALLET_SMART_CHECKOUT_CLIENT_KEY: ${VIVA_WALLET_SMART_CHECKOUT_CLIENT_KEY}
      VIVA_WALLET_VERIFICATION_KEY: ${VIVA_WALLET_VERIFICATION_KEY}
      VIVA_WALLET_API_URL: ${VIVA_WALLET_API_URL}
      VIVA_WALLET_ACCOUNTS_URL: ${VIVA_WALLET_ACCOUNTS_URL}
    depends_on:
      augustin-db:
        condition: service_healthy
    links:
      - augustin-db
      - augustin-db-test
      - keycloak
    ports:
      - "3000:3000"
  augustin-db:
    container_name: augustin-db
    image: postgres:16.0
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
      TZ: "UTC"
      PGTZ: "UTC"
    command: -p ${DB_PORT}
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - dbdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  augustin-db-test:
    container_name: augustin-db-test
    image: postgres:16.0
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
      TZ: "UTC"
      PGTZ: "UTC"
    command: -p ${DB_PORT_TEST}
    ports:
      - "${DB_PORT_TEST}:${DB_PORT_TEST}"
    volumes:
      - dbdata-test:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  keycloak:
    build: ./docker/keycloak
    container_name: augustin-keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KEYCLOAK_FRONTEND_URL: ${KEYCLOAK_HOST}
      ROOT_LOGLEVEL: ALL
      KEYCLOAK_LOGLEVEL: DEBUG
      KC_HOSTNAME_URL: ${KEYCLOAK_HOST}
      KC_HOSTNAME_ADMIN_URL: ${KEYCLOAK_HOST}
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/realms/master"]
      interval: 5s
      timeout: 2s
      retries: 15
    volumes:
      - ./docker/keycloak/import:/opt/keycloak/data/import:ro
      - ./docker/keycloak/export:/tmp/export
    command: start-dev --import-realm
    ports:
      - "8080:8080"
  wordpress-db:
    # We use a mariadb image which supports both amd64 & arm64 architecture
    image: mariadb:10.6.4-focal
    # If you really want to use MySQL, uncomment the following line
    #image: mysql:8.0.27
    command: "--default-authentication-plugin=mysql_native_password"
    volumes:
      - wp_db_data:/var/lib/mysql
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=somewordpress
      - MYSQL_DATABASE=wordpress
      - MYSQL_USER=wordpress
      - MYSQL_PASSWORD=wordpress
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "mysqladmin ping -p$$(echo $$MYSQL_ROOT_PASSWORD) | grep 'mysqld is
          alive' || exit 1",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
    expose:
      - 3306
      - 33060
  wordpress:
    image: wordpress:latest
    volumes:
      - wp_data:/var/www/html
      - ./docker/wordpress/plugins/augustin-wp-papers:/var/www/html/wp-content/plugins/augustin-wp-papers
      - ./docker/wordpress/themes/augustin-wp-theme:/var/www/html/wp-content/themes/augustin-wp-theme

    ports:
      - 8090:80
    restart: always
    environment:
      - WORDPRESS_DB_HOST=wordpress-db
      - WORDPRESS_DB_USER=wordpress
      - WORDPRESS_DB_PASSWORD=wordpress
      - WORDPRESS_DB_NAME=wordpress
      - AUGUSTIN_PLUGIN_URL=http://localhost:8070
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 5
    depends_on:
      wordpress-db:
        condition: service_healthy
      keycloak:
        condition: service_healthy
  wpcli:
    container_name: wp-cli
    image: wordpress:cli
    user: 0:0
    command: >
      sh -c " chmod +x /wpcli/entrypoint.sh && /wpcli/entrypoint.sh && tail -f
      /dev/null"
    volumes:
      - wp_data:/var/www/html
      - ./docker/wordpress/plugins/augustin-wp-papers:/var/www/html/wp-content/plugins/augustin-wp-papers
      - ./docker/wordpress/themes/augustin-wp-theme:/var/www/html/wp-content/themes/augustin-wp-theme
      - ./docker/wpcli/:/wpcli/
      - ./docker/.env.parser:/wpcli/.env.parser

    environment:
      - WORDPRESS_DB_HOST=wordpress-db
      - WORDPRESS_DB_USER=wordpress
      - WORDPRESS_DB_PASSWORD=wordpress
      - WORDPRESS_DB_NAME=wordpress
    depends_on:
      wordpress-db:
        condition: service_healthy
      wordpress:
        condition: service_healthy
    links:
      - wordpress-db
  parser:
    build:
      context: ./docker/augustin-plugin
    env_file:
      - ./docker/.env.parser
    ports:
      - "8070:8000"
    volumes:
      - ./docker/augustin-plugin-data/sample_data:/sample_data
      - ./docker/augustin-plugin-data/pdf-files:/pdf-files
      - ./docker/augustin-plugin/:/app
    environment:
      - AUGUSTIN_PLUGIN_URL=http://wordpress/wp-json/wp/v2/
      - AUGUSTIN_PLUGIN_PATH=/sample_data/
      - AUGUSTIN_PLUGIN_SAVE_PATH=/pdf-files/
      - WP_API_USER=api_user
    depends_on:
      wordpress:
        condition: service_healthy
volumes:
  dbdata:
  wp_data:
  wp_db_data:
  dbdata-test:
