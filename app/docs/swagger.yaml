basePath: /api
consumes:
- application/json
definitions:
  database.Item:
    properties:
      description:
        type: string
      id:
        type: integer
      image:
        type: string
      name:
        type: string
      price:
        type: number
    type: object
  database.Payment:
    properties:
      amount:
        type: number
      authorizedBy:
        type: string
      batch:
        type: string
      id:
        type: integer
      item:
        type: string
      receiver:
        type: integer
      sender:
        type: integer
      timestamp:
        format: date-time
        type: string
    type: object
  database.Settings:
    properties:
      color:
        type: string
      id:
        type: integer
      logo:
        type: string
      newspaper:
        $ref: '#/definitions/database.Item'
      refundFees:
        type: boolean
    type: object
  database.Vendor:
    properties:
      account:
        type: integer
      balance:
        description: This is joined in from the account
        type: number
      email:
        type: string
      firstName:
        type: string
      id:
        type: integer
      keycloakID:
        type: string
      lastName:
        type: string
      lastPayout:
        format: date-time
        type: string
      licenseID:
        type: string
      urlID:
        description: This is used for the QR code
        type: string
    type: object
  handlers.TransactionOrder:
    properties:
      amount:
        type: integer
    type: object
  handlers.TransactionOrderResponse:
    properties:
      smartCheckoutURL:
        type: string
    type: object
  handlers.TransactionVerification:
    properties:
      transactionID:
        type: string
    type: object
  handlers.TransactionVerificationResponse:
    properties:
      verification:
        type: boolean
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:3000
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This swagger describes every endpoint of this project.
  license:
    name: GNU Affero General Public License
    url: https://www.gnu.org/licenses/agpl-3.0.txt
  termsOfService: http://swagger.io/terms/
  title: Augustin Swagger
  version: 0.0.1
paths:
  /hello/:
    get:
      consumes:
      - application/json
      description: Return HelloWorld as sample API call
      produces:
      - application/json
      responses: {}
      summary: Return HelloWorld
      tags:
      - core
  /items/:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/database.Item'
            type: array
      summary: List Items
      tags:
      - Items
    post:
      consumes:
      - application/json
      parameters:
      - description: Item Representation
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/database.Item'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: int
      summary: Create Item
      tags:
      - Items
  /items/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Item ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Delete Item
      tags:
      - Items
  /items/{id}/:
    put:
      consumes:
      - application/json
      description: Requires multipart form (for image)
      parameters:
      - description: Item Representation
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/database.Item'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Update Item
      tags:
      - Items
  /payments:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/database.Payment'
            type: array
      summary: Get list of all payments
      tags:
      - core
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Create a set of payments
      tags:
      - core
  /settings/:
    get:
      consumes:
      - application/json
      description: Return configuration data of the system
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/database.Settings'
            type: array
      summary: Return settings
      tags:
      - core
  /vendors/:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/database.Vendor'
            type: array
      summary: List Vendors
      tags:
      - vendors
    post:
      consumes:
      - application/json
      parameters:
      - description: Vendor Representation
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/database.Vendor'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Create Vendor
      tags:
      - vendors
  /vendors/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Vendor ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Delete Vendor
      tags:
      - vendors
    put:
      consumes:
      - application/json
      description: 'Warning: Unfilled fields will be set to default values'
      parameters:
      - description: Vendor ID
        in: path
        name: id
        required: true
        type: integer
      - description: Vendor Representation
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/database.Vendor'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Update Vendor
      tags:
      - vendors
  /vivawallet/transaction_order/:
    post:
      consumes:
      - application/json
      description: Post your amount like {"Amount":100}, which equals 100 cents
      parameters:
      - description: Amount in cents
        in: body
        name: amount
        required: true
        schema:
          $ref: '#/definitions/handlers.TransactionOrder'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handlers.TransactionOrderResponse'
            type: array
      summary: Create a transaction order
      tags:
      - core
  /vivawallet/transaction_verification/:
    post:
      consumes:
      - application/json
      description: Accepts {"TransactionID":"1234567890"} and returns {"Verification":true},
        if successful
      parameters:
      - description: Transaction ID
        in: body
        name: transactionID
        required: true
        schema:
          $ref: '#/definitions/handlers.TransactionVerification'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handlers.TransactionVerificationResponse'
            type: array
      summary: Verify a transaction
      tags:
      - core
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
