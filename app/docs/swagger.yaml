definitions:
  database.Item:
    properties:
      id:
        type: integer
      image:
        type: string
      isEditable:
        type: boolean
      name:
        type: string
      price:
        type: number
    type: object
  database.Payment:
    properties:
      amount:
        type: number
      authorizedBy:
        $ref: '#/definitions/pgtype.Int4'
      id:
        type: integer
      item:
        $ref: '#/definitions/pgtype.Int4'
      paymentBatch:
        $ref: '#/definitions/pgtype.Int8'
      receiver:
        type: integer
      sender:
        type: integer
      timestamp:
        $ref: '#/definitions/pgtype.Timestamp'
      type:
        type: integer
    type: object
  database.PaymentType:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  database.Settings:
    properties:
      color:
        type: string
      id:
        type: integer
      logo:
        type: string
      newspaper:
        $ref: '#/definitions/database.Item'
      refundFees:
        type: boolean
    type: object
  database.Vendor:
    properties:
      account:
        type: integer
      balance:
        description: This is joined in from the account
        type: number
      email:
        type: string
      firstName:
        type: string
      id:
        type: integer
      keycloakID:
        type: string
      lastName:
        type: string
      lastPayout:
        type: string
      licenseID:
        type: string
      urlID:
        description: This is used for the QR code
        type: string
    type: object
  pgtype.InfinityModifier:
    enum:
    - 1
    - 0
    - -1
    type: integer
    x-enum-varnames:
    - Infinity
    - Finite
    - NegativeInfinity
  pgtype.Int4:
    properties:
      int32:
        type: integer
      valid:
        type: boolean
    type: object
  pgtype.Int8:
    properties:
      int64:
        type: integer
      valid:
        type: boolean
    type: object
  pgtype.Timestamp:
    properties:
      infinityModifier:
        $ref: '#/definitions/pgtype.InfinityModifier'
      time:
        description: Time zone will be ignored when encoding to PostgreSQL.
        type: string
      valid:
        type: boolean
    type: object
info:
  contact: {}
paths:
  /api/vendors/:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/database.Vendor'
            type: array
      summary: List Vendors
      tags:
      - vendors
    post:
      consumes:
      - application/json
      parameters:
      - description: Vendor Representation
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/database.Vendor'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Create Vendor
      tags:
      - vendors
  /api/vendors/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Vendor ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Delete Vendor
      tags:
      - vendors
    put:
      consumes:
      - application/json
      parameters:
      - description: Vendor ID
        in: path
        name: id
        required: true
        type: integer
      - description: Vendor Representation
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/database.Vendor'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Update Vendor
      tags:
      - vendors
  /hello/:
    get:
      consumes:
      - application/json
      description: Return HelloWorld as sample API call
      produces:
      - application/json
      responses: {}
      summary: Return HelloWorld
      tags:
      - core
  /payments:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/database.Payment'
            type: array
      summary: Get all payments
      tags:
      - core
    post:
      consumes:
      - application/json
      description: '{"Payments":[{"Sender": 1, "Receiver":1, "Type":1,"Amount":1.00]}'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/database.PaymentType'
            type: array
      summary: Create a set of payments
      tags:
      - core
  /settings/:
    get:
      consumes:
      - application/json
      description: Return settings about the web-shop
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/database.Settings'
            type: array
      summary: Return settings
      tags:
      - core
swagger: "2.0"
