// Code generated by ent, DO NOT EDIT.

package item

import (
	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/augustin-wien/augustina-backend/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.Item {
	return predicate.Item(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.Item {
	return predicate.Item(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.Item {
	return predicate.Item(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.Item {
	return predicate.Item(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.Item {
	return predicate.Item(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.Item {
	return predicate.Item(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.Item {
	return predicate.Item(sql.FieldLTE(FieldID, id))
}

// Name applies equality check predicate on the "Name" field. It's identical to NameEQ.
func Name(v string) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldName, v))
}

// Description applies equality check predicate on the "Description" field. It's identical to DescriptionEQ.
func Description(v string) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldDescription, v))
}

// Price applies equality check predicate on the "Price" field. It's identical to PriceEQ.
func Price(v float64) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldPrice, v))
}

// Image applies equality check predicate on the "Image" field. It's identical to ImageEQ.
func Image(v string) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldImage, v))
}

// Archived applies equality check predicate on the "Archived" field. It's identical to ArchivedEQ.
func Archived(v bool) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldArchived, v))
}

// IsLicenseItem applies equality check predicate on the "IsLicenseItem" field. It's identical to IsLicenseItemEQ.
func IsLicenseItem(v bool) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldIsLicenseItem, v))
}

// LicenseGroup applies equality check predicate on the "LicenseGroup" field. It's identical to LicenseGroupEQ.
func LicenseGroup(v string) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldLicenseGroup, v))
}

// IsPDFItem applies equality check predicate on the "IsPDFItem" field. It's identical to IsPDFItemEQ.
func IsPDFItem(v bool) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldIsPDFItem, v))
}

// PDF applies equality check predicate on the "PDF" field. It's identical to PDFEQ.
func PDF(v string) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldPDF, v))
}

// ItemOrder applies equality check predicate on the "ItemOrder" field. It's identical to ItemOrderEQ.
func ItemOrder(v int) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldItemOrder, v))
}

// ItemColor applies equality check predicate on the "ItemColor" field. It's identical to ItemColorEQ.
func ItemColor(v string) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldItemColor, v))
}

// ItemTextColor applies equality check predicate on the "ItemTextColor" field. It's identical to ItemTextColorEQ.
func ItemTextColor(v string) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldItemTextColor, v))
}

// NameEQ applies the EQ predicate on the "Name" field.
func NameEQ(v string) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldName, v))
}

// NameNEQ applies the NEQ predicate on the "Name" field.
func NameNEQ(v string) predicate.Item {
	return predicate.Item(sql.FieldNEQ(FieldName, v))
}

// NameIn applies the In predicate on the "Name" field.
func NameIn(vs ...string) predicate.Item {
	return predicate.Item(sql.FieldIn(FieldName, vs...))
}

// NameNotIn applies the NotIn predicate on the "Name" field.
func NameNotIn(vs ...string) predicate.Item {
	return predicate.Item(sql.FieldNotIn(FieldName, vs...))
}

// NameGT applies the GT predicate on the "Name" field.
func NameGT(v string) predicate.Item {
	return predicate.Item(sql.FieldGT(FieldName, v))
}

// NameGTE applies the GTE predicate on the "Name" field.
func NameGTE(v string) predicate.Item {
	return predicate.Item(sql.FieldGTE(FieldName, v))
}

// NameLT applies the LT predicate on the "Name" field.
func NameLT(v string) predicate.Item {
	return predicate.Item(sql.FieldLT(FieldName, v))
}

// NameLTE applies the LTE predicate on the "Name" field.
func NameLTE(v string) predicate.Item {
	return predicate.Item(sql.FieldLTE(FieldName, v))
}

// NameContains applies the Contains predicate on the "Name" field.
func NameContains(v string) predicate.Item {
	return predicate.Item(sql.FieldContains(FieldName, v))
}

// NameHasPrefix applies the HasPrefix predicate on the "Name" field.
func NameHasPrefix(v string) predicate.Item {
	return predicate.Item(sql.FieldHasPrefix(FieldName, v))
}

// NameHasSuffix applies the HasSuffix predicate on the "Name" field.
func NameHasSuffix(v string) predicate.Item {
	return predicate.Item(sql.FieldHasSuffix(FieldName, v))
}

// NameEqualFold applies the EqualFold predicate on the "Name" field.
func NameEqualFold(v string) predicate.Item {
	return predicate.Item(sql.FieldEqualFold(FieldName, v))
}

// NameContainsFold applies the ContainsFold predicate on the "Name" field.
func NameContainsFold(v string) predicate.Item {
	return predicate.Item(sql.FieldContainsFold(FieldName, v))
}

// DescriptionEQ applies the EQ predicate on the "Description" field.
func DescriptionEQ(v string) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldDescription, v))
}

// DescriptionNEQ applies the NEQ predicate on the "Description" field.
func DescriptionNEQ(v string) predicate.Item {
	return predicate.Item(sql.FieldNEQ(FieldDescription, v))
}

// DescriptionIn applies the In predicate on the "Description" field.
func DescriptionIn(vs ...string) predicate.Item {
	return predicate.Item(sql.FieldIn(FieldDescription, vs...))
}

// DescriptionNotIn applies the NotIn predicate on the "Description" field.
func DescriptionNotIn(vs ...string) predicate.Item {
	return predicate.Item(sql.FieldNotIn(FieldDescription, vs...))
}

// DescriptionGT applies the GT predicate on the "Description" field.
func DescriptionGT(v string) predicate.Item {
	return predicate.Item(sql.FieldGT(FieldDescription, v))
}

// DescriptionGTE applies the GTE predicate on the "Description" field.
func DescriptionGTE(v string) predicate.Item {
	return predicate.Item(sql.FieldGTE(FieldDescription, v))
}

// DescriptionLT applies the LT predicate on the "Description" field.
func DescriptionLT(v string) predicate.Item {
	return predicate.Item(sql.FieldLT(FieldDescription, v))
}

// DescriptionLTE applies the LTE predicate on the "Description" field.
func DescriptionLTE(v string) predicate.Item {
	return predicate.Item(sql.FieldLTE(FieldDescription, v))
}

// DescriptionContains applies the Contains predicate on the "Description" field.
func DescriptionContains(v string) predicate.Item {
	return predicate.Item(sql.FieldContains(FieldDescription, v))
}

// DescriptionHasPrefix applies the HasPrefix predicate on the "Description" field.
func DescriptionHasPrefix(v string) predicate.Item {
	return predicate.Item(sql.FieldHasPrefix(FieldDescription, v))
}

// DescriptionHasSuffix applies the HasSuffix predicate on the "Description" field.
func DescriptionHasSuffix(v string) predicate.Item {
	return predicate.Item(sql.FieldHasSuffix(FieldDescription, v))
}

// DescriptionEqualFold applies the EqualFold predicate on the "Description" field.
func DescriptionEqualFold(v string) predicate.Item {
	return predicate.Item(sql.FieldEqualFold(FieldDescription, v))
}

// DescriptionContainsFold applies the ContainsFold predicate on the "Description" field.
func DescriptionContainsFold(v string) predicate.Item {
	return predicate.Item(sql.FieldContainsFold(FieldDescription, v))
}

// PriceEQ applies the EQ predicate on the "Price" field.
func PriceEQ(v float64) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldPrice, v))
}

// PriceNEQ applies the NEQ predicate on the "Price" field.
func PriceNEQ(v float64) predicate.Item {
	return predicate.Item(sql.FieldNEQ(FieldPrice, v))
}

// PriceIn applies the In predicate on the "Price" field.
func PriceIn(vs ...float64) predicate.Item {
	return predicate.Item(sql.FieldIn(FieldPrice, vs...))
}

// PriceNotIn applies the NotIn predicate on the "Price" field.
func PriceNotIn(vs ...float64) predicate.Item {
	return predicate.Item(sql.FieldNotIn(FieldPrice, vs...))
}

// PriceGT applies the GT predicate on the "Price" field.
func PriceGT(v float64) predicate.Item {
	return predicate.Item(sql.FieldGT(FieldPrice, v))
}

// PriceGTE applies the GTE predicate on the "Price" field.
func PriceGTE(v float64) predicate.Item {
	return predicate.Item(sql.FieldGTE(FieldPrice, v))
}

// PriceLT applies the LT predicate on the "Price" field.
func PriceLT(v float64) predicate.Item {
	return predicate.Item(sql.FieldLT(FieldPrice, v))
}

// PriceLTE applies the LTE predicate on the "Price" field.
func PriceLTE(v float64) predicate.Item {
	return predicate.Item(sql.FieldLTE(FieldPrice, v))
}

// ImageEQ applies the EQ predicate on the "Image" field.
func ImageEQ(v string) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldImage, v))
}

// ImageNEQ applies the NEQ predicate on the "Image" field.
func ImageNEQ(v string) predicate.Item {
	return predicate.Item(sql.FieldNEQ(FieldImage, v))
}

// ImageIn applies the In predicate on the "Image" field.
func ImageIn(vs ...string) predicate.Item {
	return predicate.Item(sql.FieldIn(FieldImage, vs...))
}

// ImageNotIn applies the NotIn predicate on the "Image" field.
func ImageNotIn(vs ...string) predicate.Item {
	return predicate.Item(sql.FieldNotIn(FieldImage, vs...))
}

// ImageGT applies the GT predicate on the "Image" field.
func ImageGT(v string) predicate.Item {
	return predicate.Item(sql.FieldGT(FieldImage, v))
}

// ImageGTE applies the GTE predicate on the "Image" field.
func ImageGTE(v string) predicate.Item {
	return predicate.Item(sql.FieldGTE(FieldImage, v))
}

// ImageLT applies the LT predicate on the "Image" field.
func ImageLT(v string) predicate.Item {
	return predicate.Item(sql.FieldLT(FieldImage, v))
}

// ImageLTE applies the LTE predicate on the "Image" field.
func ImageLTE(v string) predicate.Item {
	return predicate.Item(sql.FieldLTE(FieldImage, v))
}

// ImageContains applies the Contains predicate on the "Image" field.
func ImageContains(v string) predicate.Item {
	return predicate.Item(sql.FieldContains(FieldImage, v))
}

// ImageHasPrefix applies the HasPrefix predicate on the "Image" field.
func ImageHasPrefix(v string) predicate.Item {
	return predicate.Item(sql.FieldHasPrefix(FieldImage, v))
}

// ImageHasSuffix applies the HasSuffix predicate on the "Image" field.
func ImageHasSuffix(v string) predicate.Item {
	return predicate.Item(sql.FieldHasSuffix(FieldImage, v))
}

// ImageEqualFold applies the EqualFold predicate on the "Image" field.
func ImageEqualFold(v string) predicate.Item {
	return predicate.Item(sql.FieldEqualFold(FieldImage, v))
}

// ImageContainsFold applies the ContainsFold predicate on the "Image" field.
func ImageContainsFold(v string) predicate.Item {
	return predicate.Item(sql.FieldContainsFold(FieldImage, v))
}

// ArchivedEQ applies the EQ predicate on the "Archived" field.
func ArchivedEQ(v bool) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldArchived, v))
}

// ArchivedNEQ applies the NEQ predicate on the "Archived" field.
func ArchivedNEQ(v bool) predicate.Item {
	return predicate.Item(sql.FieldNEQ(FieldArchived, v))
}

// IsLicenseItemEQ applies the EQ predicate on the "IsLicenseItem" field.
func IsLicenseItemEQ(v bool) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldIsLicenseItem, v))
}

// IsLicenseItemNEQ applies the NEQ predicate on the "IsLicenseItem" field.
func IsLicenseItemNEQ(v bool) predicate.Item {
	return predicate.Item(sql.FieldNEQ(FieldIsLicenseItem, v))
}

// LicenseGroupEQ applies the EQ predicate on the "LicenseGroup" field.
func LicenseGroupEQ(v string) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldLicenseGroup, v))
}

// LicenseGroupNEQ applies the NEQ predicate on the "LicenseGroup" field.
func LicenseGroupNEQ(v string) predicate.Item {
	return predicate.Item(sql.FieldNEQ(FieldLicenseGroup, v))
}

// LicenseGroupIn applies the In predicate on the "LicenseGroup" field.
func LicenseGroupIn(vs ...string) predicate.Item {
	return predicate.Item(sql.FieldIn(FieldLicenseGroup, vs...))
}

// LicenseGroupNotIn applies the NotIn predicate on the "LicenseGroup" field.
func LicenseGroupNotIn(vs ...string) predicate.Item {
	return predicate.Item(sql.FieldNotIn(FieldLicenseGroup, vs...))
}

// LicenseGroupGT applies the GT predicate on the "LicenseGroup" field.
func LicenseGroupGT(v string) predicate.Item {
	return predicate.Item(sql.FieldGT(FieldLicenseGroup, v))
}

// LicenseGroupGTE applies the GTE predicate on the "LicenseGroup" field.
func LicenseGroupGTE(v string) predicate.Item {
	return predicate.Item(sql.FieldGTE(FieldLicenseGroup, v))
}

// LicenseGroupLT applies the LT predicate on the "LicenseGroup" field.
func LicenseGroupLT(v string) predicate.Item {
	return predicate.Item(sql.FieldLT(FieldLicenseGroup, v))
}

// LicenseGroupLTE applies the LTE predicate on the "LicenseGroup" field.
func LicenseGroupLTE(v string) predicate.Item {
	return predicate.Item(sql.FieldLTE(FieldLicenseGroup, v))
}

// LicenseGroupContains applies the Contains predicate on the "LicenseGroup" field.
func LicenseGroupContains(v string) predicate.Item {
	return predicate.Item(sql.FieldContains(FieldLicenseGroup, v))
}

// LicenseGroupHasPrefix applies the HasPrefix predicate on the "LicenseGroup" field.
func LicenseGroupHasPrefix(v string) predicate.Item {
	return predicate.Item(sql.FieldHasPrefix(FieldLicenseGroup, v))
}

// LicenseGroupHasSuffix applies the HasSuffix predicate on the "LicenseGroup" field.
func LicenseGroupHasSuffix(v string) predicate.Item {
	return predicate.Item(sql.FieldHasSuffix(FieldLicenseGroup, v))
}

// LicenseGroupEqualFold applies the EqualFold predicate on the "LicenseGroup" field.
func LicenseGroupEqualFold(v string) predicate.Item {
	return predicate.Item(sql.FieldEqualFold(FieldLicenseGroup, v))
}

// LicenseGroupContainsFold applies the ContainsFold predicate on the "LicenseGroup" field.
func LicenseGroupContainsFold(v string) predicate.Item {
	return predicate.Item(sql.FieldContainsFold(FieldLicenseGroup, v))
}

// IsPDFItemEQ applies the EQ predicate on the "IsPDFItem" field.
func IsPDFItemEQ(v bool) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldIsPDFItem, v))
}

// IsPDFItemNEQ applies the NEQ predicate on the "IsPDFItem" field.
func IsPDFItemNEQ(v bool) predicate.Item {
	return predicate.Item(sql.FieldNEQ(FieldIsPDFItem, v))
}

// PDFEQ applies the EQ predicate on the "PDF" field.
func PDFEQ(v string) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldPDF, v))
}

// PDFNEQ applies the NEQ predicate on the "PDF" field.
func PDFNEQ(v string) predicate.Item {
	return predicate.Item(sql.FieldNEQ(FieldPDF, v))
}

// PDFIn applies the In predicate on the "PDF" field.
func PDFIn(vs ...string) predicate.Item {
	return predicate.Item(sql.FieldIn(FieldPDF, vs...))
}

// PDFNotIn applies the NotIn predicate on the "PDF" field.
func PDFNotIn(vs ...string) predicate.Item {
	return predicate.Item(sql.FieldNotIn(FieldPDF, vs...))
}

// PDFGT applies the GT predicate on the "PDF" field.
func PDFGT(v string) predicate.Item {
	return predicate.Item(sql.FieldGT(FieldPDF, v))
}

// PDFGTE applies the GTE predicate on the "PDF" field.
func PDFGTE(v string) predicate.Item {
	return predicate.Item(sql.FieldGTE(FieldPDF, v))
}

// PDFLT applies the LT predicate on the "PDF" field.
func PDFLT(v string) predicate.Item {
	return predicate.Item(sql.FieldLT(FieldPDF, v))
}

// PDFLTE applies the LTE predicate on the "PDF" field.
func PDFLTE(v string) predicate.Item {
	return predicate.Item(sql.FieldLTE(FieldPDF, v))
}

// PDFContains applies the Contains predicate on the "PDF" field.
func PDFContains(v string) predicate.Item {
	return predicate.Item(sql.FieldContains(FieldPDF, v))
}

// PDFHasPrefix applies the HasPrefix predicate on the "PDF" field.
func PDFHasPrefix(v string) predicate.Item {
	return predicate.Item(sql.FieldHasPrefix(FieldPDF, v))
}

// PDFHasSuffix applies the HasSuffix predicate on the "PDF" field.
func PDFHasSuffix(v string) predicate.Item {
	return predicate.Item(sql.FieldHasSuffix(FieldPDF, v))
}

// PDFEqualFold applies the EqualFold predicate on the "PDF" field.
func PDFEqualFold(v string) predicate.Item {
	return predicate.Item(sql.FieldEqualFold(FieldPDF, v))
}

// PDFContainsFold applies the ContainsFold predicate on the "PDF" field.
func PDFContainsFold(v string) predicate.Item {
	return predicate.Item(sql.FieldContainsFold(FieldPDF, v))
}

// ItemOrderEQ applies the EQ predicate on the "ItemOrder" field.
func ItemOrderEQ(v int) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldItemOrder, v))
}

// ItemOrderNEQ applies the NEQ predicate on the "ItemOrder" field.
func ItemOrderNEQ(v int) predicate.Item {
	return predicate.Item(sql.FieldNEQ(FieldItemOrder, v))
}

// ItemOrderIn applies the In predicate on the "ItemOrder" field.
func ItemOrderIn(vs ...int) predicate.Item {
	return predicate.Item(sql.FieldIn(FieldItemOrder, vs...))
}

// ItemOrderNotIn applies the NotIn predicate on the "ItemOrder" field.
func ItemOrderNotIn(vs ...int) predicate.Item {
	return predicate.Item(sql.FieldNotIn(FieldItemOrder, vs...))
}

// ItemOrderGT applies the GT predicate on the "ItemOrder" field.
func ItemOrderGT(v int) predicate.Item {
	return predicate.Item(sql.FieldGT(FieldItemOrder, v))
}

// ItemOrderGTE applies the GTE predicate on the "ItemOrder" field.
func ItemOrderGTE(v int) predicate.Item {
	return predicate.Item(sql.FieldGTE(FieldItemOrder, v))
}

// ItemOrderLT applies the LT predicate on the "ItemOrder" field.
func ItemOrderLT(v int) predicate.Item {
	return predicate.Item(sql.FieldLT(FieldItemOrder, v))
}

// ItemOrderLTE applies the LTE predicate on the "ItemOrder" field.
func ItemOrderLTE(v int) predicate.Item {
	return predicate.Item(sql.FieldLTE(FieldItemOrder, v))
}

// ItemColorEQ applies the EQ predicate on the "ItemColor" field.
func ItemColorEQ(v string) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldItemColor, v))
}

// ItemColorNEQ applies the NEQ predicate on the "ItemColor" field.
func ItemColorNEQ(v string) predicate.Item {
	return predicate.Item(sql.FieldNEQ(FieldItemColor, v))
}

// ItemColorIn applies the In predicate on the "ItemColor" field.
func ItemColorIn(vs ...string) predicate.Item {
	return predicate.Item(sql.FieldIn(FieldItemColor, vs...))
}

// ItemColorNotIn applies the NotIn predicate on the "ItemColor" field.
func ItemColorNotIn(vs ...string) predicate.Item {
	return predicate.Item(sql.FieldNotIn(FieldItemColor, vs...))
}

// ItemColorGT applies the GT predicate on the "ItemColor" field.
func ItemColorGT(v string) predicate.Item {
	return predicate.Item(sql.FieldGT(FieldItemColor, v))
}

// ItemColorGTE applies the GTE predicate on the "ItemColor" field.
func ItemColorGTE(v string) predicate.Item {
	return predicate.Item(sql.FieldGTE(FieldItemColor, v))
}

// ItemColorLT applies the LT predicate on the "ItemColor" field.
func ItemColorLT(v string) predicate.Item {
	return predicate.Item(sql.FieldLT(FieldItemColor, v))
}

// ItemColorLTE applies the LTE predicate on the "ItemColor" field.
func ItemColorLTE(v string) predicate.Item {
	return predicate.Item(sql.FieldLTE(FieldItemColor, v))
}

// ItemColorContains applies the Contains predicate on the "ItemColor" field.
func ItemColorContains(v string) predicate.Item {
	return predicate.Item(sql.FieldContains(FieldItemColor, v))
}

// ItemColorHasPrefix applies the HasPrefix predicate on the "ItemColor" field.
func ItemColorHasPrefix(v string) predicate.Item {
	return predicate.Item(sql.FieldHasPrefix(FieldItemColor, v))
}

// ItemColorHasSuffix applies the HasSuffix predicate on the "ItemColor" field.
func ItemColorHasSuffix(v string) predicate.Item {
	return predicate.Item(sql.FieldHasSuffix(FieldItemColor, v))
}

// ItemColorEqualFold applies the EqualFold predicate on the "ItemColor" field.
func ItemColorEqualFold(v string) predicate.Item {
	return predicate.Item(sql.FieldEqualFold(FieldItemColor, v))
}

// ItemColorContainsFold applies the ContainsFold predicate on the "ItemColor" field.
func ItemColorContainsFold(v string) predicate.Item {
	return predicate.Item(sql.FieldContainsFold(FieldItemColor, v))
}

// ItemTextColorEQ applies the EQ predicate on the "ItemTextColor" field.
func ItemTextColorEQ(v string) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldItemTextColor, v))
}

// ItemTextColorNEQ applies the NEQ predicate on the "ItemTextColor" field.
func ItemTextColorNEQ(v string) predicate.Item {
	return predicate.Item(sql.FieldNEQ(FieldItemTextColor, v))
}

// ItemTextColorIn applies the In predicate on the "ItemTextColor" field.
func ItemTextColorIn(vs ...string) predicate.Item {
	return predicate.Item(sql.FieldIn(FieldItemTextColor, vs...))
}

// ItemTextColorNotIn applies the NotIn predicate on the "ItemTextColor" field.
func ItemTextColorNotIn(vs ...string) predicate.Item {
	return predicate.Item(sql.FieldNotIn(FieldItemTextColor, vs...))
}

// ItemTextColorGT applies the GT predicate on the "ItemTextColor" field.
func ItemTextColorGT(v string) predicate.Item {
	return predicate.Item(sql.FieldGT(FieldItemTextColor, v))
}

// ItemTextColorGTE applies the GTE predicate on the "ItemTextColor" field.
func ItemTextColorGTE(v string) predicate.Item {
	return predicate.Item(sql.FieldGTE(FieldItemTextColor, v))
}

// ItemTextColorLT applies the LT predicate on the "ItemTextColor" field.
func ItemTextColorLT(v string) predicate.Item {
	return predicate.Item(sql.FieldLT(FieldItemTextColor, v))
}

// ItemTextColorLTE applies the LTE predicate on the "ItemTextColor" field.
func ItemTextColorLTE(v string) predicate.Item {
	return predicate.Item(sql.FieldLTE(FieldItemTextColor, v))
}

// ItemTextColorContains applies the Contains predicate on the "ItemTextColor" field.
func ItemTextColorContains(v string) predicate.Item {
	return predicate.Item(sql.FieldContains(FieldItemTextColor, v))
}

// ItemTextColorHasPrefix applies the HasPrefix predicate on the "ItemTextColor" field.
func ItemTextColorHasPrefix(v string) predicate.Item {
	return predicate.Item(sql.FieldHasPrefix(FieldItemTextColor, v))
}

// ItemTextColorHasSuffix applies the HasSuffix predicate on the "ItemTextColor" field.
func ItemTextColorHasSuffix(v string) predicate.Item {
	return predicate.Item(sql.FieldHasSuffix(FieldItemTextColor, v))
}

// ItemTextColorEqualFold applies the EqualFold predicate on the "ItemTextColor" field.
func ItemTextColorEqualFold(v string) predicate.Item {
	return predicate.Item(sql.FieldEqualFold(FieldItemTextColor, v))
}

// ItemTextColorContainsFold applies the ContainsFold predicate on the "ItemTextColor" field.
func ItemTextColorContainsFold(v string) predicate.Item {
	return predicate.Item(sql.FieldContainsFold(FieldItemTextColor, v))
}

// HasLicenseItem applies the HasEdge predicate on the "LicenseItem" edge.
func HasLicenseItem() predicate.Item {
	return predicate.Item(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2O, false, LicenseItemTable, LicenseItemColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasLicenseItemWith applies the HasEdge predicate on the "LicenseItem" edge with a given conditions (other predicates).
func HasLicenseItemWith(preds ...predicate.Item) predicate.Item {
	return predicate.Item(func(s *sql.Selector) {
		step := newLicenseItemStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Item) predicate.Item {
	return predicate.Item(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Item) predicate.Item {
	return predicate.Item(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Item) predicate.Item {
	return predicate.Item(sql.NotPredicates(p))
}
