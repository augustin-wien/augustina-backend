// Code generated by ent, DO NOT EDIT.

package settings

import (
	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/augustin-wien/augustina-backend/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.Settings {
	return predicate.Settings(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.Settings {
	return predicate.Settings(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.Settings {
	return predicate.Settings(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.Settings {
	return predicate.Settings(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.Settings {
	return predicate.Settings(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.Settings {
	return predicate.Settings(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.Settings {
	return predicate.Settings(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.Settings {
	return predicate.Settings(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.Settings {
	return predicate.Settings(sql.FieldLTE(FieldID, id))
}

// AGBUrl applies equality check predicate on the "AGBUrl" field. It's identical to AGBUrlEQ.
func AGBUrl(v string) predicate.Settings {
	return predicate.Settings(sql.FieldEQ(FieldAGBUrl, v))
}

// Color applies equality check predicate on the "Color" field. It's identical to ColorEQ.
func Color(v string) predicate.Settings {
	return predicate.Settings(sql.FieldEQ(FieldColor, v))
}

// FontColor applies equality check predicate on the "FontColor" field. It's identical to FontColorEQ.
func FontColor(v string) predicate.Settings {
	return predicate.Settings(sql.FieldEQ(FieldFontColor, v))
}

// Logo applies equality check predicate on the "Logo" field. It's identical to LogoEQ.
func Logo(v string) predicate.Settings {
	return predicate.Settings(sql.FieldEQ(FieldLogo, v))
}

// MaxOrderAmount applies equality check predicate on the "MaxOrderAmount" field. It's identical to MaxOrderAmountEQ.
func MaxOrderAmount(v int) predicate.Settings {
	return predicate.Settings(sql.FieldEQ(FieldMaxOrderAmount, v))
}

// OrgaCoversTransactionCosts applies equality check predicate on the "OrgaCoversTransactionCosts" field. It's identical to OrgaCoversTransactionCostsEQ.
func OrgaCoversTransactionCosts(v bool) predicate.Settings {
	return predicate.Settings(sql.FieldEQ(FieldOrgaCoversTransactionCosts, v))
}

// WebshopIsClosed applies equality check predicate on the "WebshopIsClosed" field. It's identical to WebshopIsClosedEQ.
func WebshopIsClosed(v bool) predicate.Settings {
	return predicate.Settings(sql.FieldEQ(FieldWebshopIsClosed, v))
}

// VendorNotFoundHelpUrl applies equality check predicate on the "VendorNotFoundHelpUrl" field. It's identical to VendorNotFoundHelpUrlEQ.
func VendorNotFoundHelpUrl(v string) predicate.Settings {
	return predicate.Settings(sql.FieldEQ(FieldVendorNotFoundHelpUrl, v))
}

// MaintainanceModeHelpUrl applies equality check predicate on the "MaintainanceModeHelpUrl" field. It's identical to MaintainanceModeHelpUrlEQ.
func MaintainanceModeHelpUrl(v string) predicate.Settings {
	return predicate.Settings(sql.FieldEQ(FieldMaintainanceModeHelpUrl, v))
}

// VendorEmailPostfix applies equality check predicate on the "VendorEmailPostfix" field. It's identical to VendorEmailPostfixEQ.
func VendorEmailPostfix(v string) predicate.Settings {
	return predicate.Settings(sql.FieldEQ(FieldVendorEmailPostfix, v))
}

// NewspaperName applies equality check predicate on the "NewspaperName" field. It's identical to NewspaperNameEQ.
func NewspaperName(v string) predicate.Settings {
	return predicate.Settings(sql.FieldEQ(FieldNewspaperName, v))
}

// QRCodeUrl applies equality check predicate on the "QRCodeUrl" field. It's identical to QRCodeUrlEQ.
func QRCodeUrl(v string) predicate.Settings {
	return predicate.Settings(sql.FieldEQ(FieldQRCodeUrl, v))
}

// QRCodeLogoImgUrl applies equality check predicate on the "QRCodeLogoImgUrl" field. It's identical to QRCodeLogoImgUrlEQ.
func QRCodeLogoImgUrl(v string) predicate.Settings {
	return predicate.Settings(sql.FieldEQ(FieldQRCodeLogoImgUrl, v))
}

// MapCenterLat applies equality check predicate on the "MapCenterLat" field. It's identical to MapCenterLatEQ.
func MapCenterLat(v float64) predicate.Settings {
	return predicate.Settings(sql.FieldEQ(FieldMapCenterLat, v))
}

// MapCenterLong applies equality check predicate on the "MapCenterLong" field. It's identical to MapCenterLongEQ.
func MapCenterLong(v float64) predicate.Settings {
	return predicate.Settings(sql.FieldEQ(FieldMapCenterLong, v))
}

// UseVendorLicenseIdInShop applies equality check predicate on the "UseVendorLicenseIdInShop" field. It's identical to UseVendorLicenseIdInShopEQ.
func UseVendorLicenseIdInShop(v bool) predicate.Settings {
	return predicate.Settings(sql.FieldEQ(FieldUseVendorLicenseIdInShop, v))
}

// Favicon applies equality check predicate on the "Favicon" field. It's identical to FaviconEQ.
func Favicon(v string) predicate.Settings {
	return predicate.Settings(sql.FieldEQ(FieldFavicon, v))
}

// QRCodeSettings applies equality check predicate on the "QRCodeSettings" field. It's identical to QRCodeSettingsEQ.
func QRCodeSettings(v string) predicate.Settings {
	return predicate.Settings(sql.FieldEQ(FieldQRCodeSettings, v))
}

// QRCodeEnableLogo applies equality check predicate on the "QRCodeEnableLogo" field. It's identical to QRCodeEnableLogoEQ.
func QRCodeEnableLogo(v bool) predicate.Settings {
	return predicate.Settings(sql.FieldEQ(FieldQRCodeEnableLogo, v))
}

// UseTipInsteadOfDonation applies equality check predicate on the "UseTipInsteadOfDonation" field. It's identical to UseTipInsteadOfDonationEQ.
func UseTipInsteadOfDonation(v bool) predicate.Settings {
	return predicate.Settings(sql.FieldEQ(FieldUseTipInsteadOfDonation, v))
}

// ShopLanding applies equality check predicate on the "ShopLanding" field. It's identical to ShopLandingEQ.
func ShopLanding(v bool) predicate.Settings {
	return predicate.Settings(sql.FieldEQ(FieldShopLanding, v))
}

// DigitalItemsUrl applies equality check predicate on the "DigitalItemsUrl" field. It's identical to DigitalItemsUrlEQ.
func DigitalItemsUrl(v string) predicate.Settings {
	return predicate.Settings(sql.FieldEQ(FieldDigitalItemsUrl, v))
}

// AGBUrlEQ applies the EQ predicate on the "AGBUrl" field.
func AGBUrlEQ(v string) predicate.Settings {
	return predicate.Settings(sql.FieldEQ(FieldAGBUrl, v))
}

// AGBUrlNEQ applies the NEQ predicate on the "AGBUrl" field.
func AGBUrlNEQ(v string) predicate.Settings {
	return predicate.Settings(sql.FieldNEQ(FieldAGBUrl, v))
}

// AGBUrlIn applies the In predicate on the "AGBUrl" field.
func AGBUrlIn(vs ...string) predicate.Settings {
	return predicate.Settings(sql.FieldIn(FieldAGBUrl, vs...))
}

// AGBUrlNotIn applies the NotIn predicate on the "AGBUrl" field.
func AGBUrlNotIn(vs ...string) predicate.Settings {
	return predicate.Settings(sql.FieldNotIn(FieldAGBUrl, vs...))
}

// AGBUrlGT applies the GT predicate on the "AGBUrl" field.
func AGBUrlGT(v string) predicate.Settings {
	return predicate.Settings(sql.FieldGT(FieldAGBUrl, v))
}

// AGBUrlGTE applies the GTE predicate on the "AGBUrl" field.
func AGBUrlGTE(v string) predicate.Settings {
	return predicate.Settings(sql.FieldGTE(FieldAGBUrl, v))
}

// AGBUrlLT applies the LT predicate on the "AGBUrl" field.
func AGBUrlLT(v string) predicate.Settings {
	return predicate.Settings(sql.FieldLT(FieldAGBUrl, v))
}

// AGBUrlLTE applies the LTE predicate on the "AGBUrl" field.
func AGBUrlLTE(v string) predicate.Settings {
	return predicate.Settings(sql.FieldLTE(FieldAGBUrl, v))
}

// AGBUrlContains applies the Contains predicate on the "AGBUrl" field.
func AGBUrlContains(v string) predicate.Settings {
	return predicate.Settings(sql.FieldContains(FieldAGBUrl, v))
}

// AGBUrlHasPrefix applies the HasPrefix predicate on the "AGBUrl" field.
func AGBUrlHasPrefix(v string) predicate.Settings {
	return predicate.Settings(sql.FieldHasPrefix(FieldAGBUrl, v))
}

// AGBUrlHasSuffix applies the HasSuffix predicate on the "AGBUrl" field.
func AGBUrlHasSuffix(v string) predicate.Settings {
	return predicate.Settings(sql.FieldHasSuffix(FieldAGBUrl, v))
}

// AGBUrlEqualFold applies the EqualFold predicate on the "AGBUrl" field.
func AGBUrlEqualFold(v string) predicate.Settings {
	return predicate.Settings(sql.FieldEqualFold(FieldAGBUrl, v))
}

// AGBUrlContainsFold applies the ContainsFold predicate on the "AGBUrl" field.
func AGBUrlContainsFold(v string) predicate.Settings {
	return predicate.Settings(sql.FieldContainsFold(FieldAGBUrl, v))
}

// ColorEQ applies the EQ predicate on the "Color" field.
func ColorEQ(v string) predicate.Settings {
	return predicate.Settings(sql.FieldEQ(FieldColor, v))
}

// ColorNEQ applies the NEQ predicate on the "Color" field.
func ColorNEQ(v string) predicate.Settings {
	return predicate.Settings(sql.FieldNEQ(FieldColor, v))
}

// ColorIn applies the In predicate on the "Color" field.
func ColorIn(vs ...string) predicate.Settings {
	return predicate.Settings(sql.FieldIn(FieldColor, vs...))
}

// ColorNotIn applies the NotIn predicate on the "Color" field.
func ColorNotIn(vs ...string) predicate.Settings {
	return predicate.Settings(sql.FieldNotIn(FieldColor, vs...))
}

// ColorGT applies the GT predicate on the "Color" field.
func ColorGT(v string) predicate.Settings {
	return predicate.Settings(sql.FieldGT(FieldColor, v))
}

// ColorGTE applies the GTE predicate on the "Color" field.
func ColorGTE(v string) predicate.Settings {
	return predicate.Settings(sql.FieldGTE(FieldColor, v))
}

// ColorLT applies the LT predicate on the "Color" field.
func ColorLT(v string) predicate.Settings {
	return predicate.Settings(sql.FieldLT(FieldColor, v))
}

// ColorLTE applies the LTE predicate on the "Color" field.
func ColorLTE(v string) predicate.Settings {
	return predicate.Settings(sql.FieldLTE(FieldColor, v))
}

// ColorContains applies the Contains predicate on the "Color" field.
func ColorContains(v string) predicate.Settings {
	return predicate.Settings(sql.FieldContains(FieldColor, v))
}

// ColorHasPrefix applies the HasPrefix predicate on the "Color" field.
func ColorHasPrefix(v string) predicate.Settings {
	return predicate.Settings(sql.FieldHasPrefix(FieldColor, v))
}

// ColorHasSuffix applies the HasSuffix predicate on the "Color" field.
func ColorHasSuffix(v string) predicate.Settings {
	return predicate.Settings(sql.FieldHasSuffix(FieldColor, v))
}

// ColorEqualFold applies the EqualFold predicate on the "Color" field.
func ColorEqualFold(v string) predicate.Settings {
	return predicate.Settings(sql.FieldEqualFold(FieldColor, v))
}

// ColorContainsFold applies the ContainsFold predicate on the "Color" field.
func ColorContainsFold(v string) predicate.Settings {
	return predicate.Settings(sql.FieldContainsFold(FieldColor, v))
}

// FontColorEQ applies the EQ predicate on the "FontColor" field.
func FontColorEQ(v string) predicate.Settings {
	return predicate.Settings(sql.FieldEQ(FieldFontColor, v))
}

// FontColorNEQ applies the NEQ predicate on the "FontColor" field.
func FontColorNEQ(v string) predicate.Settings {
	return predicate.Settings(sql.FieldNEQ(FieldFontColor, v))
}

// FontColorIn applies the In predicate on the "FontColor" field.
func FontColorIn(vs ...string) predicate.Settings {
	return predicate.Settings(sql.FieldIn(FieldFontColor, vs...))
}

// FontColorNotIn applies the NotIn predicate on the "FontColor" field.
func FontColorNotIn(vs ...string) predicate.Settings {
	return predicate.Settings(sql.FieldNotIn(FieldFontColor, vs...))
}

// FontColorGT applies the GT predicate on the "FontColor" field.
func FontColorGT(v string) predicate.Settings {
	return predicate.Settings(sql.FieldGT(FieldFontColor, v))
}

// FontColorGTE applies the GTE predicate on the "FontColor" field.
func FontColorGTE(v string) predicate.Settings {
	return predicate.Settings(sql.FieldGTE(FieldFontColor, v))
}

// FontColorLT applies the LT predicate on the "FontColor" field.
func FontColorLT(v string) predicate.Settings {
	return predicate.Settings(sql.FieldLT(FieldFontColor, v))
}

// FontColorLTE applies the LTE predicate on the "FontColor" field.
func FontColorLTE(v string) predicate.Settings {
	return predicate.Settings(sql.FieldLTE(FieldFontColor, v))
}

// FontColorContains applies the Contains predicate on the "FontColor" field.
func FontColorContains(v string) predicate.Settings {
	return predicate.Settings(sql.FieldContains(FieldFontColor, v))
}

// FontColorHasPrefix applies the HasPrefix predicate on the "FontColor" field.
func FontColorHasPrefix(v string) predicate.Settings {
	return predicate.Settings(sql.FieldHasPrefix(FieldFontColor, v))
}

// FontColorHasSuffix applies the HasSuffix predicate on the "FontColor" field.
func FontColorHasSuffix(v string) predicate.Settings {
	return predicate.Settings(sql.FieldHasSuffix(FieldFontColor, v))
}

// FontColorEqualFold applies the EqualFold predicate on the "FontColor" field.
func FontColorEqualFold(v string) predicate.Settings {
	return predicate.Settings(sql.FieldEqualFold(FieldFontColor, v))
}

// FontColorContainsFold applies the ContainsFold predicate on the "FontColor" field.
func FontColorContainsFold(v string) predicate.Settings {
	return predicate.Settings(sql.FieldContainsFold(FieldFontColor, v))
}

// LogoEQ applies the EQ predicate on the "Logo" field.
func LogoEQ(v string) predicate.Settings {
	return predicate.Settings(sql.FieldEQ(FieldLogo, v))
}

// LogoNEQ applies the NEQ predicate on the "Logo" field.
func LogoNEQ(v string) predicate.Settings {
	return predicate.Settings(sql.FieldNEQ(FieldLogo, v))
}

// LogoIn applies the In predicate on the "Logo" field.
func LogoIn(vs ...string) predicate.Settings {
	return predicate.Settings(sql.FieldIn(FieldLogo, vs...))
}

// LogoNotIn applies the NotIn predicate on the "Logo" field.
func LogoNotIn(vs ...string) predicate.Settings {
	return predicate.Settings(sql.FieldNotIn(FieldLogo, vs...))
}

// LogoGT applies the GT predicate on the "Logo" field.
func LogoGT(v string) predicate.Settings {
	return predicate.Settings(sql.FieldGT(FieldLogo, v))
}

// LogoGTE applies the GTE predicate on the "Logo" field.
func LogoGTE(v string) predicate.Settings {
	return predicate.Settings(sql.FieldGTE(FieldLogo, v))
}

// LogoLT applies the LT predicate on the "Logo" field.
func LogoLT(v string) predicate.Settings {
	return predicate.Settings(sql.FieldLT(FieldLogo, v))
}

// LogoLTE applies the LTE predicate on the "Logo" field.
func LogoLTE(v string) predicate.Settings {
	return predicate.Settings(sql.FieldLTE(FieldLogo, v))
}

// LogoContains applies the Contains predicate on the "Logo" field.
func LogoContains(v string) predicate.Settings {
	return predicate.Settings(sql.FieldContains(FieldLogo, v))
}

// LogoHasPrefix applies the HasPrefix predicate on the "Logo" field.
func LogoHasPrefix(v string) predicate.Settings {
	return predicate.Settings(sql.FieldHasPrefix(FieldLogo, v))
}

// LogoHasSuffix applies the HasSuffix predicate on the "Logo" field.
func LogoHasSuffix(v string) predicate.Settings {
	return predicate.Settings(sql.FieldHasSuffix(FieldLogo, v))
}

// LogoEqualFold applies the EqualFold predicate on the "Logo" field.
func LogoEqualFold(v string) predicate.Settings {
	return predicate.Settings(sql.FieldEqualFold(FieldLogo, v))
}

// LogoContainsFold applies the ContainsFold predicate on the "Logo" field.
func LogoContainsFold(v string) predicate.Settings {
	return predicate.Settings(sql.FieldContainsFold(FieldLogo, v))
}

// MaxOrderAmountEQ applies the EQ predicate on the "MaxOrderAmount" field.
func MaxOrderAmountEQ(v int) predicate.Settings {
	return predicate.Settings(sql.FieldEQ(FieldMaxOrderAmount, v))
}

// MaxOrderAmountNEQ applies the NEQ predicate on the "MaxOrderAmount" field.
func MaxOrderAmountNEQ(v int) predicate.Settings {
	return predicate.Settings(sql.FieldNEQ(FieldMaxOrderAmount, v))
}

// MaxOrderAmountIn applies the In predicate on the "MaxOrderAmount" field.
func MaxOrderAmountIn(vs ...int) predicate.Settings {
	return predicate.Settings(sql.FieldIn(FieldMaxOrderAmount, vs...))
}

// MaxOrderAmountNotIn applies the NotIn predicate on the "MaxOrderAmount" field.
func MaxOrderAmountNotIn(vs ...int) predicate.Settings {
	return predicate.Settings(sql.FieldNotIn(FieldMaxOrderAmount, vs...))
}

// MaxOrderAmountGT applies the GT predicate on the "MaxOrderAmount" field.
func MaxOrderAmountGT(v int) predicate.Settings {
	return predicate.Settings(sql.FieldGT(FieldMaxOrderAmount, v))
}

// MaxOrderAmountGTE applies the GTE predicate on the "MaxOrderAmount" field.
func MaxOrderAmountGTE(v int) predicate.Settings {
	return predicate.Settings(sql.FieldGTE(FieldMaxOrderAmount, v))
}

// MaxOrderAmountLT applies the LT predicate on the "MaxOrderAmount" field.
func MaxOrderAmountLT(v int) predicate.Settings {
	return predicate.Settings(sql.FieldLT(FieldMaxOrderAmount, v))
}

// MaxOrderAmountLTE applies the LTE predicate on the "MaxOrderAmount" field.
func MaxOrderAmountLTE(v int) predicate.Settings {
	return predicate.Settings(sql.FieldLTE(FieldMaxOrderAmount, v))
}

// OrgaCoversTransactionCostsEQ applies the EQ predicate on the "OrgaCoversTransactionCosts" field.
func OrgaCoversTransactionCostsEQ(v bool) predicate.Settings {
	return predicate.Settings(sql.FieldEQ(FieldOrgaCoversTransactionCosts, v))
}

// OrgaCoversTransactionCostsNEQ applies the NEQ predicate on the "OrgaCoversTransactionCosts" field.
func OrgaCoversTransactionCostsNEQ(v bool) predicate.Settings {
	return predicate.Settings(sql.FieldNEQ(FieldOrgaCoversTransactionCosts, v))
}

// WebshopIsClosedEQ applies the EQ predicate on the "WebshopIsClosed" field.
func WebshopIsClosedEQ(v bool) predicate.Settings {
	return predicate.Settings(sql.FieldEQ(FieldWebshopIsClosed, v))
}

// WebshopIsClosedNEQ applies the NEQ predicate on the "WebshopIsClosed" field.
func WebshopIsClosedNEQ(v bool) predicate.Settings {
	return predicate.Settings(sql.FieldNEQ(FieldWebshopIsClosed, v))
}

// VendorNotFoundHelpUrlEQ applies the EQ predicate on the "VendorNotFoundHelpUrl" field.
func VendorNotFoundHelpUrlEQ(v string) predicate.Settings {
	return predicate.Settings(sql.FieldEQ(FieldVendorNotFoundHelpUrl, v))
}

// VendorNotFoundHelpUrlNEQ applies the NEQ predicate on the "VendorNotFoundHelpUrl" field.
func VendorNotFoundHelpUrlNEQ(v string) predicate.Settings {
	return predicate.Settings(sql.FieldNEQ(FieldVendorNotFoundHelpUrl, v))
}

// VendorNotFoundHelpUrlIn applies the In predicate on the "VendorNotFoundHelpUrl" field.
func VendorNotFoundHelpUrlIn(vs ...string) predicate.Settings {
	return predicate.Settings(sql.FieldIn(FieldVendorNotFoundHelpUrl, vs...))
}

// VendorNotFoundHelpUrlNotIn applies the NotIn predicate on the "VendorNotFoundHelpUrl" field.
func VendorNotFoundHelpUrlNotIn(vs ...string) predicate.Settings {
	return predicate.Settings(sql.FieldNotIn(FieldVendorNotFoundHelpUrl, vs...))
}

// VendorNotFoundHelpUrlGT applies the GT predicate on the "VendorNotFoundHelpUrl" field.
func VendorNotFoundHelpUrlGT(v string) predicate.Settings {
	return predicate.Settings(sql.FieldGT(FieldVendorNotFoundHelpUrl, v))
}

// VendorNotFoundHelpUrlGTE applies the GTE predicate on the "VendorNotFoundHelpUrl" field.
func VendorNotFoundHelpUrlGTE(v string) predicate.Settings {
	return predicate.Settings(sql.FieldGTE(FieldVendorNotFoundHelpUrl, v))
}

// VendorNotFoundHelpUrlLT applies the LT predicate on the "VendorNotFoundHelpUrl" field.
func VendorNotFoundHelpUrlLT(v string) predicate.Settings {
	return predicate.Settings(sql.FieldLT(FieldVendorNotFoundHelpUrl, v))
}

// VendorNotFoundHelpUrlLTE applies the LTE predicate on the "VendorNotFoundHelpUrl" field.
func VendorNotFoundHelpUrlLTE(v string) predicate.Settings {
	return predicate.Settings(sql.FieldLTE(FieldVendorNotFoundHelpUrl, v))
}

// VendorNotFoundHelpUrlContains applies the Contains predicate on the "VendorNotFoundHelpUrl" field.
func VendorNotFoundHelpUrlContains(v string) predicate.Settings {
	return predicate.Settings(sql.FieldContains(FieldVendorNotFoundHelpUrl, v))
}

// VendorNotFoundHelpUrlHasPrefix applies the HasPrefix predicate on the "VendorNotFoundHelpUrl" field.
func VendorNotFoundHelpUrlHasPrefix(v string) predicate.Settings {
	return predicate.Settings(sql.FieldHasPrefix(FieldVendorNotFoundHelpUrl, v))
}

// VendorNotFoundHelpUrlHasSuffix applies the HasSuffix predicate on the "VendorNotFoundHelpUrl" field.
func VendorNotFoundHelpUrlHasSuffix(v string) predicate.Settings {
	return predicate.Settings(sql.FieldHasSuffix(FieldVendorNotFoundHelpUrl, v))
}

// VendorNotFoundHelpUrlEqualFold applies the EqualFold predicate on the "VendorNotFoundHelpUrl" field.
func VendorNotFoundHelpUrlEqualFold(v string) predicate.Settings {
	return predicate.Settings(sql.FieldEqualFold(FieldVendorNotFoundHelpUrl, v))
}

// VendorNotFoundHelpUrlContainsFold applies the ContainsFold predicate on the "VendorNotFoundHelpUrl" field.
func VendorNotFoundHelpUrlContainsFold(v string) predicate.Settings {
	return predicate.Settings(sql.FieldContainsFold(FieldVendorNotFoundHelpUrl, v))
}

// MaintainanceModeHelpUrlEQ applies the EQ predicate on the "MaintainanceModeHelpUrl" field.
func MaintainanceModeHelpUrlEQ(v string) predicate.Settings {
	return predicate.Settings(sql.FieldEQ(FieldMaintainanceModeHelpUrl, v))
}

// MaintainanceModeHelpUrlNEQ applies the NEQ predicate on the "MaintainanceModeHelpUrl" field.
func MaintainanceModeHelpUrlNEQ(v string) predicate.Settings {
	return predicate.Settings(sql.FieldNEQ(FieldMaintainanceModeHelpUrl, v))
}

// MaintainanceModeHelpUrlIn applies the In predicate on the "MaintainanceModeHelpUrl" field.
func MaintainanceModeHelpUrlIn(vs ...string) predicate.Settings {
	return predicate.Settings(sql.FieldIn(FieldMaintainanceModeHelpUrl, vs...))
}

// MaintainanceModeHelpUrlNotIn applies the NotIn predicate on the "MaintainanceModeHelpUrl" field.
func MaintainanceModeHelpUrlNotIn(vs ...string) predicate.Settings {
	return predicate.Settings(sql.FieldNotIn(FieldMaintainanceModeHelpUrl, vs...))
}

// MaintainanceModeHelpUrlGT applies the GT predicate on the "MaintainanceModeHelpUrl" field.
func MaintainanceModeHelpUrlGT(v string) predicate.Settings {
	return predicate.Settings(sql.FieldGT(FieldMaintainanceModeHelpUrl, v))
}

// MaintainanceModeHelpUrlGTE applies the GTE predicate on the "MaintainanceModeHelpUrl" field.
func MaintainanceModeHelpUrlGTE(v string) predicate.Settings {
	return predicate.Settings(sql.FieldGTE(FieldMaintainanceModeHelpUrl, v))
}

// MaintainanceModeHelpUrlLT applies the LT predicate on the "MaintainanceModeHelpUrl" field.
func MaintainanceModeHelpUrlLT(v string) predicate.Settings {
	return predicate.Settings(sql.FieldLT(FieldMaintainanceModeHelpUrl, v))
}

// MaintainanceModeHelpUrlLTE applies the LTE predicate on the "MaintainanceModeHelpUrl" field.
func MaintainanceModeHelpUrlLTE(v string) predicate.Settings {
	return predicate.Settings(sql.FieldLTE(FieldMaintainanceModeHelpUrl, v))
}

// MaintainanceModeHelpUrlContains applies the Contains predicate on the "MaintainanceModeHelpUrl" field.
func MaintainanceModeHelpUrlContains(v string) predicate.Settings {
	return predicate.Settings(sql.FieldContains(FieldMaintainanceModeHelpUrl, v))
}

// MaintainanceModeHelpUrlHasPrefix applies the HasPrefix predicate on the "MaintainanceModeHelpUrl" field.
func MaintainanceModeHelpUrlHasPrefix(v string) predicate.Settings {
	return predicate.Settings(sql.FieldHasPrefix(FieldMaintainanceModeHelpUrl, v))
}

// MaintainanceModeHelpUrlHasSuffix applies the HasSuffix predicate on the "MaintainanceModeHelpUrl" field.
func MaintainanceModeHelpUrlHasSuffix(v string) predicate.Settings {
	return predicate.Settings(sql.FieldHasSuffix(FieldMaintainanceModeHelpUrl, v))
}

// MaintainanceModeHelpUrlEqualFold applies the EqualFold predicate on the "MaintainanceModeHelpUrl" field.
func MaintainanceModeHelpUrlEqualFold(v string) predicate.Settings {
	return predicate.Settings(sql.FieldEqualFold(FieldMaintainanceModeHelpUrl, v))
}

// MaintainanceModeHelpUrlContainsFold applies the ContainsFold predicate on the "MaintainanceModeHelpUrl" field.
func MaintainanceModeHelpUrlContainsFold(v string) predicate.Settings {
	return predicate.Settings(sql.FieldContainsFold(FieldMaintainanceModeHelpUrl, v))
}

// VendorEmailPostfixEQ applies the EQ predicate on the "VendorEmailPostfix" field.
func VendorEmailPostfixEQ(v string) predicate.Settings {
	return predicate.Settings(sql.FieldEQ(FieldVendorEmailPostfix, v))
}

// VendorEmailPostfixNEQ applies the NEQ predicate on the "VendorEmailPostfix" field.
func VendorEmailPostfixNEQ(v string) predicate.Settings {
	return predicate.Settings(sql.FieldNEQ(FieldVendorEmailPostfix, v))
}

// VendorEmailPostfixIn applies the In predicate on the "VendorEmailPostfix" field.
func VendorEmailPostfixIn(vs ...string) predicate.Settings {
	return predicate.Settings(sql.FieldIn(FieldVendorEmailPostfix, vs...))
}

// VendorEmailPostfixNotIn applies the NotIn predicate on the "VendorEmailPostfix" field.
func VendorEmailPostfixNotIn(vs ...string) predicate.Settings {
	return predicate.Settings(sql.FieldNotIn(FieldVendorEmailPostfix, vs...))
}

// VendorEmailPostfixGT applies the GT predicate on the "VendorEmailPostfix" field.
func VendorEmailPostfixGT(v string) predicate.Settings {
	return predicate.Settings(sql.FieldGT(FieldVendorEmailPostfix, v))
}

// VendorEmailPostfixGTE applies the GTE predicate on the "VendorEmailPostfix" field.
func VendorEmailPostfixGTE(v string) predicate.Settings {
	return predicate.Settings(sql.FieldGTE(FieldVendorEmailPostfix, v))
}

// VendorEmailPostfixLT applies the LT predicate on the "VendorEmailPostfix" field.
func VendorEmailPostfixLT(v string) predicate.Settings {
	return predicate.Settings(sql.FieldLT(FieldVendorEmailPostfix, v))
}

// VendorEmailPostfixLTE applies the LTE predicate on the "VendorEmailPostfix" field.
func VendorEmailPostfixLTE(v string) predicate.Settings {
	return predicate.Settings(sql.FieldLTE(FieldVendorEmailPostfix, v))
}

// VendorEmailPostfixContains applies the Contains predicate on the "VendorEmailPostfix" field.
func VendorEmailPostfixContains(v string) predicate.Settings {
	return predicate.Settings(sql.FieldContains(FieldVendorEmailPostfix, v))
}

// VendorEmailPostfixHasPrefix applies the HasPrefix predicate on the "VendorEmailPostfix" field.
func VendorEmailPostfixHasPrefix(v string) predicate.Settings {
	return predicate.Settings(sql.FieldHasPrefix(FieldVendorEmailPostfix, v))
}

// VendorEmailPostfixHasSuffix applies the HasSuffix predicate on the "VendorEmailPostfix" field.
func VendorEmailPostfixHasSuffix(v string) predicate.Settings {
	return predicate.Settings(sql.FieldHasSuffix(FieldVendorEmailPostfix, v))
}

// VendorEmailPostfixEqualFold applies the EqualFold predicate on the "VendorEmailPostfix" field.
func VendorEmailPostfixEqualFold(v string) predicate.Settings {
	return predicate.Settings(sql.FieldEqualFold(FieldVendorEmailPostfix, v))
}

// VendorEmailPostfixContainsFold applies the ContainsFold predicate on the "VendorEmailPostfix" field.
func VendorEmailPostfixContainsFold(v string) predicate.Settings {
	return predicate.Settings(sql.FieldContainsFold(FieldVendorEmailPostfix, v))
}

// NewspaperNameEQ applies the EQ predicate on the "NewspaperName" field.
func NewspaperNameEQ(v string) predicate.Settings {
	return predicate.Settings(sql.FieldEQ(FieldNewspaperName, v))
}

// NewspaperNameNEQ applies the NEQ predicate on the "NewspaperName" field.
func NewspaperNameNEQ(v string) predicate.Settings {
	return predicate.Settings(sql.FieldNEQ(FieldNewspaperName, v))
}

// NewspaperNameIn applies the In predicate on the "NewspaperName" field.
func NewspaperNameIn(vs ...string) predicate.Settings {
	return predicate.Settings(sql.FieldIn(FieldNewspaperName, vs...))
}

// NewspaperNameNotIn applies the NotIn predicate on the "NewspaperName" field.
func NewspaperNameNotIn(vs ...string) predicate.Settings {
	return predicate.Settings(sql.FieldNotIn(FieldNewspaperName, vs...))
}

// NewspaperNameGT applies the GT predicate on the "NewspaperName" field.
func NewspaperNameGT(v string) predicate.Settings {
	return predicate.Settings(sql.FieldGT(FieldNewspaperName, v))
}

// NewspaperNameGTE applies the GTE predicate on the "NewspaperName" field.
func NewspaperNameGTE(v string) predicate.Settings {
	return predicate.Settings(sql.FieldGTE(FieldNewspaperName, v))
}

// NewspaperNameLT applies the LT predicate on the "NewspaperName" field.
func NewspaperNameLT(v string) predicate.Settings {
	return predicate.Settings(sql.FieldLT(FieldNewspaperName, v))
}

// NewspaperNameLTE applies the LTE predicate on the "NewspaperName" field.
func NewspaperNameLTE(v string) predicate.Settings {
	return predicate.Settings(sql.FieldLTE(FieldNewspaperName, v))
}

// NewspaperNameContains applies the Contains predicate on the "NewspaperName" field.
func NewspaperNameContains(v string) predicate.Settings {
	return predicate.Settings(sql.FieldContains(FieldNewspaperName, v))
}

// NewspaperNameHasPrefix applies the HasPrefix predicate on the "NewspaperName" field.
func NewspaperNameHasPrefix(v string) predicate.Settings {
	return predicate.Settings(sql.FieldHasPrefix(FieldNewspaperName, v))
}

// NewspaperNameHasSuffix applies the HasSuffix predicate on the "NewspaperName" field.
func NewspaperNameHasSuffix(v string) predicate.Settings {
	return predicate.Settings(sql.FieldHasSuffix(FieldNewspaperName, v))
}

// NewspaperNameEqualFold applies the EqualFold predicate on the "NewspaperName" field.
func NewspaperNameEqualFold(v string) predicate.Settings {
	return predicate.Settings(sql.FieldEqualFold(FieldNewspaperName, v))
}

// NewspaperNameContainsFold applies the ContainsFold predicate on the "NewspaperName" field.
func NewspaperNameContainsFold(v string) predicate.Settings {
	return predicate.Settings(sql.FieldContainsFold(FieldNewspaperName, v))
}

// QRCodeUrlEQ applies the EQ predicate on the "QRCodeUrl" field.
func QRCodeUrlEQ(v string) predicate.Settings {
	return predicate.Settings(sql.FieldEQ(FieldQRCodeUrl, v))
}

// QRCodeUrlNEQ applies the NEQ predicate on the "QRCodeUrl" field.
func QRCodeUrlNEQ(v string) predicate.Settings {
	return predicate.Settings(sql.FieldNEQ(FieldQRCodeUrl, v))
}

// QRCodeUrlIn applies the In predicate on the "QRCodeUrl" field.
func QRCodeUrlIn(vs ...string) predicate.Settings {
	return predicate.Settings(sql.FieldIn(FieldQRCodeUrl, vs...))
}

// QRCodeUrlNotIn applies the NotIn predicate on the "QRCodeUrl" field.
func QRCodeUrlNotIn(vs ...string) predicate.Settings {
	return predicate.Settings(sql.FieldNotIn(FieldQRCodeUrl, vs...))
}

// QRCodeUrlGT applies the GT predicate on the "QRCodeUrl" field.
func QRCodeUrlGT(v string) predicate.Settings {
	return predicate.Settings(sql.FieldGT(FieldQRCodeUrl, v))
}

// QRCodeUrlGTE applies the GTE predicate on the "QRCodeUrl" field.
func QRCodeUrlGTE(v string) predicate.Settings {
	return predicate.Settings(sql.FieldGTE(FieldQRCodeUrl, v))
}

// QRCodeUrlLT applies the LT predicate on the "QRCodeUrl" field.
func QRCodeUrlLT(v string) predicate.Settings {
	return predicate.Settings(sql.FieldLT(FieldQRCodeUrl, v))
}

// QRCodeUrlLTE applies the LTE predicate on the "QRCodeUrl" field.
func QRCodeUrlLTE(v string) predicate.Settings {
	return predicate.Settings(sql.FieldLTE(FieldQRCodeUrl, v))
}

// QRCodeUrlContains applies the Contains predicate on the "QRCodeUrl" field.
func QRCodeUrlContains(v string) predicate.Settings {
	return predicate.Settings(sql.FieldContains(FieldQRCodeUrl, v))
}

// QRCodeUrlHasPrefix applies the HasPrefix predicate on the "QRCodeUrl" field.
func QRCodeUrlHasPrefix(v string) predicate.Settings {
	return predicate.Settings(sql.FieldHasPrefix(FieldQRCodeUrl, v))
}

// QRCodeUrlHasSuffix applies the HasSuffix predicate on the "QRCodeUrl" field.
func QRCodeUrlHasSuffix(v string) predicate.Settings {
	return predicate.Settings(sql.FieldHasSuffix(FieldQRCodeUrl, v))
}

// QRCodeUrlEqualFold applies the EqualFold predicate on the "QRCodeUrl" field.
func QRCodeUrlEqualFold(v string) predicate.Settings {
	return predicate.Settings(sql.FieldEqualFold(FieldQRCodeUrl, v))
}

// QRCodeUrlContainsFold applies the ContainsFold predicate on the "QRCodeUrl" field.
func QRCodeUrlContainsFold(v string) predicate.Settings {
	return predicate.Settings(sql.FieldContainsFold(FieldQRCodeUrl, v))
}

// QRCodeLogoImgUrlEQ applies the EQ predicate on the "QRCodeLogoImgUrl" field.
func QRCodeLogoImgUrlEQ(v string) predicate.Settings {
	return predicate.Settings(sql.FieldEQ(FieldQRCodeLogoImgUrl, v))
}

// QRCodeLogoImgUrlNEQ applies the NEQ predicate on the "QRCodeLogoImgUrl" field.
func QRCodeLogoImgUrlNEQ(v string) predicate.Settings {
	return predicate.Settings(sql.FieldNEQ(FieldQRCodeLogoImgUrl, v))
}

// QRCodeLogoImgUrlIn applies the In predicate on the "QRCodeLogoImgUrl" field.
func QRCodeLogoImgUrlIn(vs ...string) predicate.Settings {
	return predicate.Settings(sql.FieldIn(FieldQRCodeLogoImgUrl, vs...))
}

// QRCodeLogoImgUrlNotIn applies the NotIn predicate on the "QRCodeLogoImgUrl" field.
func QRCodeLogoImgUrlNotIn(vs ...string) predicate.Settings {
	return predicate.Settings(sql.FieldNotIn(FieldQRCodeLogoImgUrl, vs...))
}

// QRCodeLogoImgUrlGT applies the GT predicate on the "QRCodeLogoImgUrl" field.
func QRCodeLogoImgUrlGT(v string) predicate.Settings {
	return predicate.Settings(sql.FieldGT(FieldQRCodeLogoImgUrl, v))
}

// QRCodeLogoImgUrlGTE applies the GTE predicate on the "QRCodeLogoImgUrl" field.
func QRCodeLogoImgUrlGTE(v string) predicate.Settings {
	return predicate.Settings(sql.FieldGTE(FieldQRCodeLogoImgUrl, v))
}

// QRCodeLogoImgUrlLT applies the LT predicate on the "QRCodeLogoImgUrl" field.
func QRCodeLogoImgUrlLT(v string) predicate.Settings {
	return predicate.Settings(sql.FieldLT(FieldQRCodeLogoImgUrl, v))
}

// QRCodeLogoImgUrlLTE applies the LTE predicate on the "QRCodeLogoImgUrl" field.
func QRCodeLogoImgUrlLTE(v string) predicate.Settings {
	return predicate.Settings(sql.FieldLTE(FieldQRCodeLogoImgUrl, v))
}

// QRCodeLogoImgUrlContains applies the Contains predicate on the "QRCodeLogoImgUrl" field.
func QRCodeLogoImgUrlContains(v string) predicate.Settings {
	return predicate.Settings(sql.FieldContains(FieldQRCodeLogoImgUrl, v))
}

// QRCodeLogoImgUrlHasPrefix applies the HasPrefix predicate on the "QRCodeLogoImgUrl" field.
func QRCodeLogoImgUrlHasPrefix(v string) predicate.Settings {
	return predicate.Settings(sql.FieldHasPrefix(FieldQRCodeLogoImgUrl, v))
}

// QRCodeLogoImgUrlHasSuffix applies the HasSuffix predicate on the "QRCodeLogoImgUrl" field.
func QRCodeLogoImgUrlHasSuffix(v string) predicate.Settings {
	return predicate.Settings(sql.FieldHasSuffix(FieldQRCodeLogoImgUrl, v))
}

// QRCodeLogoImgUrlEqualFold applies the EqualFold predicate on the "QRCodeLogoImgUrl" field.
func QRCodeLogoImgUrlEqualFold(v string) predicate.Settings {
	return predicate.Settings(sql.FieldEqualFold(FieldQRCodeLogoImgUrl, v))
}

// QRCodeLogoImgUrlContainsFold applies the ContainsFold predicate on the "QRCodeLogoImgUrl" field.
func QRCodeLogoImgUrlContainsFold(v string) predicate.Settings {
	return predicate.Settings(sql.FieldContainsFold(FieldQRCodeLogoImgUrl, v))
}

// MapCenterLatEQ applies the EQ predicate on the "MapCenterLat" field.
func MapCenterLatEQ(v float64) predicate.Settings {
	return predicate.Settings(sql.FieldEQ(FieldMapCenterLat, v))
}

// MapCenterLatNEQ applies the NEQ predicate on the "MapCenterLat" field.
func MapCenterLatNEQ(v float64) predicate.Settings {
	return predicate.Settings(sql.FieldNEQ(FieldMapCenterLat, v))
}

// MapCenterLatIn applies the In predicate on the "MapCenterLat" field.
func MapCenterLatIn(vs ...float64) predicate.Settings {
	return predicate.Settings(sql.FieldIn(FieldMapCenterLat, vs...))
}

// MapCenterLatNotIn applies the NotIn predicate on the "MapCenterLat" field.
func MapCenterLatNotIn(vs ...float64) predicate.Settings {
	return predicate.Settings(sql.FieldNotIn(FieldMapCenterLat, vs...))
}

// MapCenterLatGT applies the GT predicate on the "MapCenterLat" field.
func MapCenterLatGT(v float64) predicate.Settings {
	return predicate.Settings(sql.FieldGT(FieldMapCenterLat, v))
}

// MapCenterLatGTE applies the GTE predicate on the "MapCenterLat" field.
func MapCenterLatGTE(v float64) predicate.Settings {
	return predicate.Settings(sql.FieldGTE(FieldMapCenterLat, v))
}

// MapCenterLatLT applies the LT predicate on the "MapCenterLat" field.
func MapCenterLatLT(v float64) predicate.Settings {
	return predicate.Settings(sql.FieldLT(FieldMapCenterLat, v))
}

// MapCenterLatLTE applies the LTE predicate on the "MapCenterLat" field.
func MapCenterLatLTE(v float64) predicate.Settings {
	return predicate.Settings(sql.FieldLTE(FieldMapCenterLat, v))
}

// MapCenterLongEQ applies the EQ predicate on the "MapCenterLong" field.
func MapCenterLongEQ(v float64) predicate.Settings {
	return predicate.Settings(sql.FieldEQ(FieldMapCenterLong, v))
}

// MapCenterLongNEQ applies the NEQ predicate on the "MapCenterLong" field.
func MapCenterLongNEQ(v float64) predicate.Settings {
	return predicate.Settings(sql.FieldNEQ(FieldMapCenterLong, v))
}

// MapCenterLongIn applies the In predicate on the "MapCenterLong" field.
func MapCenterLongIn(vs ...float64) predicate.Settings {
	return predicate.Settings(sql.FieldIn(FieldMapCenterLong, vs...))
}

// MapCenterLongNotIn applies the NotIn predicate on the "MapCenterLong" field.
func MapCenterLongNotIn(vs ...float64) predicate.Settings {
	return predicate.Settings(sql.FieldNotIn(FieldMapCenterLong, vs...))
}

// MapCenterLongGT applies the GT predicate on the "MapCenterLong" field.
func MapCenterLongGT(v float64) predicate.Settings {
	return predicate.Settings(sql.FieldGT(FieldMapCenterLong, v))
}

// MapCenterLongGTE applies the GTE predicate on the "MapCenterLong" field.
func MapCenterLongGTE(v float64) predicate.Settings {
	return predicate.Settings(sql.FieldGTE(FieldMapCenterLong, v))
}

// MapCenterLongLT applies the LT predicate on the "MapCenterLong" field.
func MapCenterLongLT(v float64) predicate.Settings {
	return predicate.Settings(sql.FieldLT(FieldMapCenterLong, v))
}

// MapCenterLongLTE applies the LTE predicate on the "MapCenterLong" field.
func MapCenterLongLTE(v float64) predicate.Settings {
	return predicate.Settings(sql.FieldLTE(FieldMapCenterLong, v))
}

// UseVendorLicenseIdInShopEQ applies the EQ predicate on the "UseVendorLicenseIdInShop" field.
func UseVendorLicenseIdInShopEQ(v bool) predicate.Settings {
	return predicate.Settings(sql.FieldEQ(FieldUseVendorLicenseIdInShop, v))
}

// UseVendorLicenseIdInShopNEQ applies the NEQ predicate on the "UseVendorLicenseIdInShop" field.
func UseVendorLicenseIdInShopNEQ(v bool) predicate.Settings {
	return predicate.Settings(sql.FieldNEQ(FieldUseVendorLicenseIdInShop, v))
}

// FaviconEQ applies the EQ predicate on the "Favicon" field.
func FaviconEQ(v string) predicate.Settings {
	return predicate.Settings(sql.FieldEQ(FieldFavicon, v))
}

// FaviconNEQ applies the NEQ predicate on the "Favicon" field.
func FaviconNEQ(v string) predicate.Settings {
	return predicate.Settings(sql.FieldNEQ(FieldFavicon, v))
}

// FaviconIn applies the In predicate on the "Favicon" field.
func FaviconIn(vs ...string) predicate.Settings {
	return predicate.Settings(sql.FieldIn(FieldFavicon, vs...))
}

// FaviconNotIn applies the NotIn predicate on the "Favicon" field.
func FaviconNotIn(vs ...string) predicate.Settings {
	return predicate.Settings(sql.FieldNotIn(FieldFavicon, vs...))
}

// FaviconGT applies the GT predicate on the "Favicon" field.
func FaviconGT(v string) predicate.Settings {
	return predicate.Settings(sql.FieldGT(FieldFavicon, v))
}

// FaviconGTE applies the GTE predicate on the "Favicon" field.
func FaviconGTE(v string) predicate.Settings {
	return predicate.Settings(sql.FieldGTE(FieldFavicon, v))
}

// FaviconLT applies the LT predicate on the "Favicon" field.
func FaviconLT(v string) predicate.Settings {
	return predicate.Settings(sql.FieldLT(FieldFavicon, v))
}

// FaviconLTE applies the LTE predicate on the "Favicon" field.
func FaviconLTE(v string) predicate.Settings {
	return predicate.Settings(sql.FieldLTE(FieldFavicon, v))
}

// FaviconContains applies the Contains predicate on the "Favicon" field.
func FaviconContains(v string) predicate.Settings {
	return predicate.Settings(sql.FieldContains(FieldFavicon, v))
}

// FaviconHasPrefix applies the HasPrefix predicate on the "Favicon" field.
func FaviconHasPrefix(v string) predicate.Settings {
	return predicate.Settings(sql.FieldHasPrefix(FieldFavicon, v))
}

// FaviconHasSuffix applies the HasSuffix predicate on the "Favicon" field.
func FaviconHasSuffix(v string) predicate.Settings {
	return predicate.Settings(sql.FieldHasSuffix(FieldFavicon, v))
}

// FaviconEqualFold applies the EqualFold predicate on the "Favicon" field.
func FaviconEqualFold(v string) predicate.Settings {
	return predicate.Settings(sql.FieldEqualFold(FieldFavicon, v))
}

// FaviconContainsFold applies the ContainsFold predicate on the "Favicon" field.
func FaviconContainsFold(v string) predicate.Settings {
	return predicate.Settings(sql.FieldContainsFold(FieldFavicon, v))
}

// QRCodeSettingsEQ applies the EQ predicate on the "QRCodeSettings" field.
func QRCodeSettingsEQ(v string) predicate.Settings {
	return predicate.Settings(sql.FieldEQ(FieldQRCodeSettings, v))
}

// QRCodeSettingsNEQ applies the NEQ predicate on the "QRCodeSettings" field.
func QRCodeSettingsNEQ(v string) predicate.Settings {
	return predicate.Settings(sql.FieldNEQ(FieldQRCodeSettings, v))
}

// QRCodeSettingsIn applies the In predicate on the "QRCodeSettings" field.
func QRCodeSettingsIn(vs ...string) predicate.Settings {
	return predicate.Settings(sql.FieldIn(FieldQRCodeSettings, vs...))
}

// QRCodeSettingsNotIn applies the NotIn predicate on the "QRCodeSettings" field.
func QRCodeSettingsNotIn(vs ...string) predicate.Settings {
	return predicate.Settings(sql.FieldNotIn(FieldQRCodeSettings, vs...))
}

// QRCodeSettingsGT applies the GT predicate on the "QRCodeSettings" field.
func QRCodeSettingsGT(v string) predicate.Settings {
	return predicate.Settings(sql.FieldGT(FieldQRCodeSettings, v))
}

// QRCodeSettingsGTE applies the GTE predicate on the "QRCodeSettings" field.
func QRCodeSettingsGTE(v string) predicate.Settings {
	return predicate.Settings(sql.FieldGTE(FieldQRCodeSettings, v))
}

// QRCodeSettingsLT applies the LT predicate on the "QRCodeSettings" field.
func QRCodeSettingsLT(v string) predicate.Settings {
	return predicate.Settings(sql.FieldLT(FieldQRCodeSettings, v))
}

// QRCodeSettingsLTE applies the LTE predicate on the "QRCodeSettings" field.
func QRCodeSettingsLTE(v string) predicate.Settings {
	return predicate.Settings(sql.FieldLTE(FieldQRCodeSettings, v))
}

// QRCodeSettingsContains applies the Contains predicate on the "QRCodeSettings" field.
func QRCodeSettingsContains(v string) predicate.Settings {
	return predicate.Settings(sql.FieldContains(FieldQRCodeSettings, v))
}

// QRCodeSettingsHasPrefix applies the HasPrefix predicate on the "QRCodeSettings" field.
func QRCodeSettingsHasPrefix(v string) predicate.Settings {
	return predicate.Settings(sql.FieldHasPrefix(FieldQRCodeSettings, v))
}

// QRCodeSettingsHasSuffix applies the HasSuffix predicate on the "QRCodeSettings" field.
func QRCodeSettingsHasSuffix(v string) predicate.Settings {
	return predicate.Settings(sql.FieldHasSuffix(FieldQRCodeSettings, v))
}

// QRCodeSettingsEqualFold applies the EqualFold predicate on the "QRCodeSettings" field.
func QRCodeSettingsEqualFold(v string) predicate.Settings {
	return predicate.Settings(sql.FieldEqualFold(FieldQRCodeSettings, v))
}

// QRCodeSettingsContainsFold applies the ContainsFold predicate on the "QRCodeSettings" field.
func QRCodeSettingsContainsFold(v string) predicate.Settings {
	return predicate.Settings(sql.FieldContainsFold(FieldQRCodeSettings, v))
}

// QRCodeEnableLogoEQ applies the EQ predicate on the "QRCodeEnableLogo" field.
func QRCodeEnableLogoEQ(v bool) predicate.Settings {
	return predicate.Settings(sql.FieldEQ(FieldQRCodeEnableLogo, v))
}

// QRCodeEnableLogoNEQ applies the NEQ predicate on the "QRCodeEnableLogo" field.
func QRCodeEnableLogoNEQ(v bool) predicate.Settings {
	return predicate.Settings(sql.FieldNEQ(FieldQRCodeEnableLogo, v))
}

// UseTipInsteadOfDonationEQ applies the EQ predicate on the "UseTipInsteadOfDonation" field.
func UseTipInsteadOfDonationEQ(v bool) predicate.Settings {
	return predicate.Settings(sql.FieldEQ(FieldUseTipInsteadOfDonation, v))
}

// UseTipInsteadOfDonationNEQ applies the NEQ predicate on the "UseTipInsteadOfDonation" field.
func UseTipInsteadOfDonationNEQ(v bool) predicate.Settings {
	return predicate.Settings(sql.FieldNEQ(FieldUseTipInsteadOfDonation, v))
}

// ShopLandingEQ applies the EQ predicate on the "ShopLanding" field.
func ShopLandingEQ(v bool) predicate.Settings {
	return predicate.Settings(sql.FieldEQ(FieldShopLanding, v))
}

// ShopLandingNEQ applies the NEQ predicate on the "ShopLanding" field.
func ShopLandingNEQ(v bool) predicate.Settings {
	return predicate.Settings(sql.FieldNEQ(FieldShopLanding, v))
}

// DigitalItemsUrlEQ applies the EQ predicate on the "DigitalItemsUrl" field.
func DigitalItemsUrlEQ(v string) predicate.Settings {
	return predicate.Settings(sql.FieldEQ(FieldDigitalItemsUrl, v))
}

// DigitalItemsUrlNEQ applies the NEQ predicate on the "DigitalItemsUrl" field.
func DigitalItemsUrlNEQ(v string) predicate.Settings {
	return predicate.Settings(sql.FieldNEQ(FieldDigitalItemsUrl, v))
}

// DigitalItemsUrlIn applies the In predicate on the "DigitalItemsUrl" field.
func DigitalItemsUrlIn(vs ...string) predicate.Settings {
	return predicate.Settings(sql.FieldIn(FieldDigitalItemsUrl, vs...))
}

// DigitalItemsUrlNotIn applies the NotIn predicate on the "DigitalItemsUrl" field.
func DigitalItemsUrlNotIn(vs ...string) predicate.Settings {
	return predicate.Settings(sql.FieldNotIn(FieldDigitalItemsUrl, vs...))
}

// DigitalItemsUrlGT applies the GT predicate on the "DigitalItemsUrl" field.
func DigitalItemsUrlGT(v string) predicate.Settings {
	return predicate.Settings(sql.FieldGT(FieldDigitalItemsUrl, v))
}

// DigitalItemsUrlGTE applies the GTE predicate on the "DigitalItemsUrl" field.
func DigitalItemsUrlGTE(v string) predicate.Settings {
	return predicate.Settings(sql.FieldGTE(FieldDigitalItemsUrl, v))
}

// DigitalItemsUrlLT applies the LT predicate on the "DigitalItemsUrl" field.
func DigitalItemsUrlLT(v string) predicate.Settings {
	return predicate.Settings(sql.FieldLT(FieldDigitalItemsUrl, v))
}

// DigitalItemsUrlLTE applies the LTE predicate on the "DigitalItemsUrl" field.
func DigitalItemsUrlLTE(v string) predicate.Settings {
	return predicate.Settings(sql.FieldLTE(FieldDigitalItemsUrl, v))
}

// DigitalItemsUrlContains applies the Contains predicate on the "DigitalItemsUrl" field.
func DigitalItemsUrlContains(v string) predicate.Settings {
	return predicate.Settings(sql.FieldContains(FieldDigitalItemsUrl, v))
}

// DigitalItemsUrlHasPrefix applies the HasPrefix predicate on the "DigitalItemsUrl" field.
func DigitalItemsUrlHasPrefix(v string) predicate.Settings {
	return predicate.Settings(sql.FieldHasPrefix(FieldDigitalItemsUrl, v))
}

// DigitalItemsUrlHasSuffix applies the HasSuffix predicate on the "DigitalItemsUrl" field.
func DigitalItemsUrlHasSuffix(v string) predicate.Settings {
	return predicate.Settings(sql.FieldHasSuffix(FieldDigitalItemsUrl, v))
}

// DigitalItemsUrlEqualFold applies the EqualFold predicate on the "DigitalItemsUrl" field.
func DigitalItemsUrlEqualFold(v string) predicate.Settings {
	return predicate.Settings(sql.FieldEqualFold(FieldDigitalItemsUrl, v))
}

// DigitalItemsUrlContainsFold applies the ContainsFold predicate on the "DigitalItemsUrl" field.
func DigitalItemsUrlContainsFold(v string) predicate.Settings {
	return predicate.Settings(sql.FieldContainsFold(FieldDigitalItemsUrl, v))
}

// HasMainItem applies the HasEdge predicate on the "MainItem" edge.
func HasMainItem() predicate.Settings {
	return predicate.Settings(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, false, MainItemTable, MainItemColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasMainItemWith applies the HasEdge predicate on the "MainItem" edge with a given conditions (other predicates).
func HasMainItemWith(preds ...predicate.Item) predicate.Settings {
	return predicate.Settings(func(s *sql.Selector) {
		step := newMainItemStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Settings) predicate.Settings {
	return predicate.Settings(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Settings) predicate.Settings {
	return predicate.Settings(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Settings) predicate.Settings {
	return predicate.Settings(sql.NotPredicates(p))
}
