// Code generated by ent, DO NOT EDIT.

package ent

import (
	"github.com/augustin-wien/augustina-backend/ent/location"
	"github.com/augustin-wien/augustina-backend/ent/schema"
	"github.com/augustin-wien/augustina-backend/ent/vendor"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	locationFields := schema.Location{}.Fields()
	_ = locationFields
	// locationDescLongitude is the schema descriptor for longitude field.
	locationDescLongitude := locationFields[3].Descriptor()
	// location.DefaultLongitude holds the default value on creation for the longitude field.
	location.DefaultLongitude = locationDescLongitude.Default.(float64)
	// locationDescLatitude is the schema descriptor for latitude field.
	locationDescLatitude := locationFields[4].Descriptor()
	// location.DefaultLatitude holds the default value on creation for the latitude field.
	location.DefaultLatitude = locationDescLatitude.Default.(float64)
	// locationDescID is the schema descriptor for id field.
	locationDescID := locationFields[0].Descriptor()
	// location.IDValidator is a validator for the "id" field. It is called by the builders before save.
	location.IDValidator = locationDescID.Validators[0].(func(int) error)
	vendorFields := schema.Vendor{}.Fields()
	_ = vendorFields
	// vendorDescLicenseid is the schema descriptor for licenseid field.
	vendorDescLicenseid := vendorFields[3].Descriptor()
	// vendor.DefaultLicenseid holds the default value on creation for the licenseid field.
	vendor.DefaultLicenseid = vendorDescLicenseid.Default.(string)
	// vendorDescFirstname is the schema descriptor for firstname field.
	vendorDescFirstname := vendorFields[4].Descriptor()
	// vendor.DefaultFirstname holds the default value on creation for the firstname field.
	vendor.DefaultFirstname = vendorDescFirstname.Default.(string)
	// vendorDescLastname is the schema descriptor for lastname field.
	vendorDescLastname := vendorFields[5].Descriptor()
	// vendor.DefaultLastname holds the default value on creation for the lastname field.
	vendor.DefaultLastname = vendorDescLastname.Default.(string)
	// vendorDescEmail is the schema descriptor for email field.
	vendorDescEmail := vendorFields[6].Descriptor()
	// vendor.DefaultEmail holds the default value on creation for the email field.
	vendor.DefaultEmail = vendorDescEmail.Default.(string)
	// vendorDescIsdisabled is the schema descriptor for isdisabled field.
	vendorDescIsdisabled := vendorFields[8].Descriptor()
	// vendor.DefaultIsdisabled holds the default value on creation for the isdisabled field.
	vendor.DefaultIsdisabled = vendorDescIsdisabled.Default.(bool)
	// vendorDescOnlinemap is the schema descriptor for onlinemap field.
	vendorDescOnlinemap := vendorFields[13].Descriptor()
	// vendor.DefaultOnlinemap holds the default value on creation for the onlinemap field.
	vendor.DefaultOnlinemap = vendorDescOnlinemap.Default.(bool)
	// vendorDescHassmartphone is the schema descriptor for hassmartphone field.
	vendorDescHassmartphone := vendorFields[14].Descriptor()
	// vendor.DefaultHassmartphone holds the default value on creation for the hassmartphone field.
	vendor.DefaultHassmartphone = vendorDescHassmartphone.Default.(bool)
	// vendorDescHasbankaccount is the schema descriptor for hasbankaccount field.
	vendorDescHasbankaccount := vendorFields[15].Descriptor()
	// vendor.DefaultHasbankaccount holds the default value on creation for the hasbankaccount field.
	vendor.DefaultHasbankaccount = vendorDescHasbankaccount.Default.(bool)
	// vendorDescIsdeleted is the schema descriptor for isdeleted field.
	vendorDescIsdeleted := vendorFields[16].Descriptor()
	// vendor.DefaultIsdeleted holds the default value on creation for the isdeleted field.
	vendor.DefaultIsdeleted = vendorDescIsdeleted.Default.(bool)
	// vendorDescID is the schema descriptor for id field.
	vendorDescID := vendorFields[0].Descriptor()
	// vendor.IDValidator is a validator for the "id" field. It is called by the builders before save.
	vendor.IDValidator = vendorDescID.Validators[0].(func(int) error)
}
