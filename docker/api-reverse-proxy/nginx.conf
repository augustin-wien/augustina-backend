upstream backend1 {
   server 172.17.0.1:3001;
}
upstream backend2 {
   server 172.17.0.1:3002;
}

map $http_referer $backend {
    default backend1; # Default backend if no match
    "~*augustin1" backend1;
    "~*augustin2" backend2;
}

map $http_referer $cors_origin {
        default "http://localhost:3000";
        "~*augustin1" "$http_origin";
        "~*augustin2" "$http_origin";
    }

server {
	listen 80 default_server;
	listen [::]:80 default_server;
	

        location / {
            # Handle OPTIONS requests
            if ($request_method = OPTIONS) {
                add_header 'Access-Control-Allow-Origin' $cors_origin;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
				      add_header 'Access-Control-Allow-Credentials' 'true';
                add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }

            # Use the $backend variable to determine the proxy_pass target
            proxy_pass http://$backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Set the Access-Control-Allow-Origin header for other requests
            add_header 'Access-Control-Allow-Origin' $cors_origin;
			      add_header 'Access-Control-Allow-Credentials' 'true';
        }
}